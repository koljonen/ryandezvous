{"version":3,"sources":["flightsearch.js","AirportSelector.js","Form.js","ResultsTable.js","App.js","index.js"],"names":["formatKiwiDate","date","moment","format","getFaresFromAirport","throttle","airport","state","a","async","fareURL","buildUrl","path","queryParams","fly_from","id","dateFrom","departureDate","dateTo","returnFrom","returnDate","returnTo","curr","ret_from_diff_airport","fly_to","destinationAirport","undefined","max_stopovers","replace","fetch","json","flights","data","arrayToDict","map","forEach","flight","getKey","push","cityCodeTo","maybeAdd","myFare","herFare","candidates","myArrival","Date","route","local_arrival","herArrival","myReturn","length","herReturn","arrivalDiff","Math","abs","returnDiff","msTogether","min","max","msApart","maxDiffHours","day","local_departure","destination","cityTo","countryTo","name","myArrivalDate","herArrivalDate","myReturnDate","herReturnDate","myDepartureDate","herDepartureDate","price","timeApart","duration","timeTogether","myLink","deep_link","herLink","getCandidates","myFaresArray","herFaresDict","revertParams","herFaresFromCity","myAirport","myFares","herAirport","herFares","myFaresDict","Object","keys","myFaresToDestination","newCandidates","herFaresToDestination","getFares","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","locationSearch","term","url","locationJson","locations","location","assign","AirportSelector","props","classes","React","useState","inputValue","setInputValue","options","setOptions","handleSearch","event","value","target","ourFetch","useMemo","input","callback","useEffect","active","results","Autocomplete","style","width","getOptionLabel","option","filterOptions","x","onChange","renderInput","params","TextField","required","label","variant","fullWidth","renderOption","parts","parse","match","Grid","container","alignItems","item","className","xs","part","index","key","fontWeight","highlight","Typography","nextThursday","add","isoWeekday","requiredParams","fillDefault","whichAirport","filter","code","Form","allowSubmit","doStuff","handleChange","e","this","setState","bind","startLoading","finishLoading","handleSubmit","componentDidUpdate","setDepartureDate","prevProps","prevState","snapshot","oldMatch","newMatch","setAirport","which","newState","preventDefault","reduce","tot","par","loading","newDate","clearCandidates","history","fares","addCandidates","onSubmit","sm","md","xl","utils","MomentUtils","DatePicker","disablePast","inputVariant","d","minDate","Button","disabled","onClick","Component","withRouter","ResultsTable","columns","title","field","formatter","formatterParams","symbol","precision","headerFilter","headerFilterFunc","headerValue","rowValue","align","outputFormat","cell","onRendered","getValue","humanize","sorter","b","asSeconds","parseDuration","height","layout","reactiveData","s","split","numberPart","parseInt","unitPart","Loading","window","updateLocale","week","dow","App","setLoading","setCandidates","routing","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05b389ae.chunk.js","sourcesContent":["import throttle from 'lodash/throttle';\nimport buildUrl from 'build-url';\nimport moment from \"moment\";\n\nfunction formatKiwiDate(date) {\n    return moment(date).format('DD/MM/YYYY');\n}\n\nconst getFaresFromAirport = throttle(\n    async function (airport, state) {\n        const fareURL = buildUrl(\n            'https://kiwiproxy.herokuapp.com',\n            {\n                path: \"v2/search\",\n                queryParams: {\n                    fly_from: airport.id,\n                    dateFrom: formatKiwiDate(state.departureDate),\n                    dateTo: formatKiwiDate(state.departureDate),\n                    returnFrom: formatKiwiDate(state.returnDate),\n                    returnTo: formatKiwiDate(state.returnDate),\n                    curr: 'EUR',\n                    ret_from_diff_airport: 0,\n                    fly_to: state.destinationAirport ? state.destinationAirport.id : undefined,\n                    max_stopovers: 0\n                }\n            }\n        ).replace(/%2F/g, '/');\n        const flights = (await (await fetch(fareURL)).json()).data;\n        return flights;\n    },\n    200\n);\n\n\nfunction arrayToDict(flights, map = {}) {\n    flights.forEach(\n        (flight) => {\n            if(getKey(flight) in map) map[getKey(flight)].push(flight);\n            else map[getKey(flight)] = [flight];\n            return map;\n        },\n        {}\n    );\n    return map;\n}\n\nfunction getKey(flight) {\n    return flight.cityCodeTo;\n}\n\nfunction maybeAdd(myFare, herFare, candidates) {\n    const maxDiffHours = 36;\n    const myArrival = new Date(myFare.route[0].local_arrival);\n    const herArrival = new Date(herFare.route[0].local_arrival);\n    const myReturn = new Date(myFare.route[myFare.route.length - 1].local_arrival);\n    const herReturn = new Date(herFare.route[herFare.route.length - 1].local_arrival);\n    const arrivalDiff = Math.abs(myArrival - herArrival);\n    const returnDiff = Math.abs(myReturn - herReturn);\n    const msTogether = Math.min(myReturn, herReturn) - Math.max(myArrival, herArrival);\n    const msApart = arrivalDiff + returnDiff;\n    if(arrivalDiff + returnDiff > maxDiffHours * 60 * 60 * 1000) return;\n    if(myFare.cityCodeTo !== herFare.cityCodeTo) return;\n    if(msTogether < 24 * 60 * 60 * 1000) return;\n    if(msTogether <= msApart) return;\n    candidates.push({\n        day: myFare.route[0].local_departure,\n        destination: myFare.cityTo + ', ' + myFare.countryTo.name,\n        myArrivalDate: myFare.route[0].local_arrival,\n        herArrivalDate: herFare.route[0].local_arrival,\n        myReturnDate: myFare.route[myFare.route.length - 1].local_arrival,\n        herReturnDate: herFare.route[herFare.route.length - 1].local_arrival,\n        myDepartureDate: myFare.route[0].local_departure,\n        herDepartureDate: herFare.route[0].local_departure,\n        price: myFare.price + herFare.price,\n        timeApart: moment.duration(msApart),\n        timeTogether: moment.duration(msTogether),\n        myLink: myFare.deep_link,\n        herLink: herFare.deep_link\n    });\n};\n\nfunction getCandidates({myFaresArray, herFaresDict, revertParams = false}) {\n    const candidates = [];\n    myFaresArray.forEach(\n        myFare => {\n            const herFaresFromCity = herFaresDict[getKey(myFare)];\n            if(herFaresFromCity) herFaresFromCity.forEach(\n                herFare => {\n                    if(revertParams) maybeAdd(herFare, myFare, candidates)\n                    else maybeAdd(myFare, herFare, candidates)\n                }\n            )\n        }\n    );\n    return candidates;\n}\n\nasync function* getFares(state) {\n    const myFares = await getFaresFromAirport(state.myAirport, state);\n    const herFares = await getFaresFromAirport(state.herAirport, state);\n    const myFaresDict = arrayToDict(myFares);\n    const herFaresDict = arrayToDict(herFares);\n    yield getCandidates({myFaresArray: myFares, herFaresDict:herFaresDict});\n    for(const destination of Object.keys(herFaresDict)) {\n        if(destination in myFaresDict) continue;\n        const myFaresToDestination = await getFaresFromAirport(\n            state.myAirport,\n            {...state, destinationAirport: {id: destination}}\n        );\n        const newCandidates = getCandidates({myFaresArray: myFaresToDestination, herFaresDict: herFaresDict});\n        yield newCandidates;\n        // todo: add to dict\n    }\n    for(const destination of Object.keys(myFaresDict)) {\n        if(destination in herFaresDict) continue;\n        const herFaresToDestination = await getFaresFromAirport(\n            state.herAirport,\n            {...state, destinationAirport: {id: destination}}\n        );\n        const newCandidates = getCandidates({myFaresArray: herFaresToDestination, herFaresDict: myFaresDict, revertParams: true});\n        yield newCandidates;\n        // todo: add to dict\n    }\n}\n\nexport default getFares;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport throttle from 'lodash/throttle';\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nasync function locationSearch({term, id}) {\n    const url = 'https://kiwiproxy.herokuapp.com/locations/' + (id ? `id?id=${id}` : `/query?&term=${term}`);\n    const locationJson = await fetch(url);\n    const locations = await locationJson.json();\n    return locations.locations.map(location => Object.assign(location, {'input': term || id}))\n}\n\nexport default function AirportSelector(props) {\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n\n    const handleSearch = (event, value) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleChange = (event, value) => {\n        props.onChange({\n            target:{\n                name: props.name,\n                value: value\n            }\n        });\n    }\n\n    const ourFetch = React.useMemo(\n        () => throttle(\n            async function(input, callback) {\n                const locations = await locationSearch({term: input});\n                callback(locations);\n            },\n            200\n        ),\n        [],\n    );\n\n    React.useEffect(\n        () => {\n            let active = true;\n            if (inputValue === '') {\n                setOptions([]);\n                return undefined;\n            }\n            ourFetch(\n                inputValue,\n                results => {\n                    if (active) {\n                        setOptions(results || []);\n                    }\n                }\n            );\n\n            return () => {\n                active = false;\n            };\n        },\n        [inputValue, ourFetch]\n    );\n\n    return (\n        <Autocomplete\n            style={{ width: \"240px\" }}\n            getOptionLabel={option => (typeof option === 'string' ? option : option.name)}\n            filterOptions={x => x}\n            options={options}\n            onChange={handleChange}\n            value={props.value}\n            renderInput={params => (\n                <TextField\n                    required={props.required}\n                    {...params}\n                    label={props.label}\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={handleSearch}\n                />\n            )}\n            renderOption={option => {\n                const parts = parse(\n                    option.name,\n                    match(option.name, option.input)\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                    {part.text}\n                                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.name}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n","import { withRouter } from 'react-router-dom';\nimport getFares from './flightsearch.js';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport AirportSelector from './AirportSelector.js';\n\nfunction nextThursday() {\n    return moment().add((moment().isoWeekday() >= 4  ? 12 : 4) - moment().isoWeekday(), 'days');\n}\n\nconst requiredParams = ['departureDate', 'returnDate', 'myAirport', 'herAirport'];\n\nasync function fillDefault(whichAirport, state) {\n    if(state[whichAirport]) {\n        const url = `https://kiwiproxy.herokuapp.com/locations/id?id=${state[whichAirport]}`;\n        const locationJson = await fetch(url);\n        const locations = await locationJson.json();\n        state[whichAirport] = locations.locations.filter(\n            x => x.code === state[whichAirport]\n        )[0];\n    }\n}\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureDate: nextThursday(),\n            returnDate: nextThursday().add(4, 'days'),\n            destinationAirport: \"\",\n            ...props.match.params\n        };\n        this.state.departureDate = moment(this.state.departureDate);\n        this.state.returnDate = moment(this.state.returnDate);\n        this.allowSubmit = this.allowSubmit.bind(this);\n        this.startLoading = props.startLoading;\n        this.finishLoading = props.finishLoading;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.doStuff = this.doStuff.bind(this);\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\n        this.setDepartureDate = this.setDepartureDate.bind(this);\n        async function fillDefaults(state, allowSubmit, doStuff) {\n            await fillDefault('myAirport', state);\n            await fillDefault('herAirport', state);\n            await fillDefault('destinationAirport', state);\n            if (allowSubmit()) doStuff();\n        }\n        fillDefaults(this.state, this.allowSubmit, this.doStuff);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const setState = this.setState.bind(this)\n        const oldMatch = prevProps.match.params;\n        const newMatch = this.props.match.params;\n        if(newMatch.returnDate !== oldMatch.returnDate) {\n            this.setState({returnDate: moment(newMatch.returnDate)});\n        }\n        if(newMatch.departureDate !== oldMatch.departureDate) this.setDepartureDate(newMatch.departureDate);\n        async function setAirport(which)  {\n            if(newMatch[which] !== oldMatch[which]) {\n                const newState = {};\n                newState[which] = newMatch[which];\n                await fillDefault(which, newState);\n                setState(newState);\n            }\n        }\n        setAirport('myAirport');\n        setAirport('herAirport');\n        setAirport('destinationAirport');\n    }\n    \n    handleChange = function(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    allowSubmit() {\n        return requiredParams.reduce(\n            (tot, par) => tot && !!this.state[par],\n            true\n        ) && !this.props.loading;\n    }\n\n    setDepartureDate(newDate) {\n        if(newDate > this.state.returnDate) {\n            this.setState({\n                returnDate: moment(this.state.returnDate + (newDate - this.state.departureDate))\n            });\n        }\n        this.setState({departureDate: moment(newDate)});\n    }\n\n    async doStuff() {\n        this.startLoading();\n        this.props.clearCandidates();\n        this.props.history.push(\n            `/${this.state.myAirport.id}/` +\n            `${this.state.herAirport.id}/` +\n            `${this.state.departureDate.format('YYYY-MM-DD')}/` +\n            `${this.state.returnDate.format('YYYY-MM-DD')}/` +\n            (this.state.destinationAirport && this.state.destinationAirport.id ? `${this.state.destinationAirport.id}` : '')\n        );\n        for await (const fares of await getFares(this.state)) this.props.addCandidates(fares);\n        this.finishLoading();\n    }\n\n    renderInput = input => input.name;\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <Grid container spacing={2}>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"departureDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                disablePast\n                                variant=\"inline\"\n                                label=\"Departure\"\n                                value={this.state.departureDate}\n                                inputVariant=\"outlined\"\n                                onChange={this.setDepartureDate}\n                            />\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"returnDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                variant=\"inline\"\n                                label=\"Return\"\n                                value={this.state.returnDate}\n                                inputVariant=\"outlined\"\n                                onChange={d => this.setState({returnDate: d})}\n                                minDate={this.state.departureDate}\n                            />\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"myAirport\"\n                            name=\"myAirport\"\n                            value={this.state.myAirport}\n                            onChange={this.handleChange}\n                            label=\"Your origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"herAirport\"\n                            name=\"herAirport\"\n                            value={this.state.herAirport}\n                            onChange={this.handleChange}\n                            label=\"Their origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            id=\"destinationAirport\"\n                            name=\"destinationAirport\"\n                            value={this.state.destinationAirport}\n                            onChange={this.handleChange}\n                            label=\"Destination\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <Button variant=\"contained\" color=\"primary\" disabled={!this.allowSubmit()} onClick={this.doStuff}>Search</Button>\n                    </Grid>\n                </Grid>\n                \n            </form>\n        );\n    }\n}\n\nexport default withRouter(Form)\n","import moment from \"moment\";\nimport React from 'react';\nimport 'react-tabulator/lib/styles.css';\nimport 'react-tabulator/lib/css/tabulator.min.css';\nimport { ReactTabulator } from 'react-tabulator';\n\nexport default function ResultsTable(props) {\n    const columns = [\n        {\n            title: \"Price\",\n            field: \"price\",\n            formatter: \"money\",\n            formatterParams: {\n                symbol: \"€\",\n                precision: 0\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => headerValue >= rowValue,\n        },\n        {\n            title: \"Destination\",\n            field: \"destination\",\n            headerFilter: true\n        },\n        {\n            title: \"You\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"myArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"myReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"myLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Them\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"herArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"herReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"herLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Together\",\n            field: \"timeTogether\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            sorter: (a, b) => a.asSeconds() - b.asSeconds(),\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) <= rowValue,\n        },\n        {\n            title: \"Apart\",\n            field: \"timeApart\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            sorter: (a, b) => a.asSeconds() - b.asSeconds(),\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) >= rowValue,\n        },\n    ];\n    return (\n        <ReactTabulator\n            data={props.candidates}\n            columns={columns}\n            options={{\n                height:\"100%\",\n                layout:\"fitColumns\",\n                reactiveData:true,\n            }}\n        />\n  );\n}\n\nfunction parseDuration(s) {\n    const parts = s.split(' ');\n    const numberPart = parts[0] === 'a' || parts[0] === 'an' ? 1 : parseInt(parts[0]);\n    const unitPart =  parts[1][parts[1].length -1] === 's' ? parts[1] : parts[1] + 's';\n    return moment.duration(numberPart, unitPart);\n}\n","import moment from \"moment\";\nimport React from 'react';\nimport './App.css';\nimport Form from './Form.js';\nimport ResultsTable from './ResultsTable.js';\n\n// for tabulator\nwindow.moment = moment;\nmoment.updateLocale('en', {\n    week: {\n      dow: 1,\n    },\n});\n\nfunction App(props) {\n    const [loading, setLoading] = React.useState(0);\n    const [candidates, setCandidates] = React.useState([]);\n    const startLoading = () => setLoading(loading + 1);\n    const finishLoading = () => setLoading(loading - 1);\n    const addCandidates = (newCandidates) => setCandidates([...candidates, ...newCandidates]);\n    const clearCandidates = () => setCandidates([]);\n    return (\n        <div>\n            <Form\n                addCandidates={addCandidates}\n                clearCandidates={clearCandidates}\n                startLoading={startLoading}\n                finishLoading={finishLoading}\n                loading={loading > 0}\n            />\n            <Loading id=\"loading\" loading={loading > 0}/>\n            <ResultsTable candidates={candidates}/>\n        </div>\n  );\n}\n\nfunction Loading(props) {\n    return <div id={props.id}>{props.loading ? '✈' : ''}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom'\nimport App from './App'\n\nconst routing = (\n  <Router>\n    <div>\n        <Switch>\n            <Route exact path=\"/:myAirport/:herAirport/:departureDate/:returnDate\" component={App} />\n            <Route exact path=\"/:myAirport/:herAirport/:departureDate/:returnDate/:destinationAirport\" component={App} />\n            <Route exact path=\"/\" component={App} />\n        </Switch>\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n"],"sourceRoot":""}