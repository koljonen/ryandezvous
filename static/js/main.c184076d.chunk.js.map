{"version":3,"sources":["logo.svg","AirportSelector.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","AirportSelector","props","classes","React","useState","inputValue","setInputValue","options","setOptions","loaded","useRef","label","current","handleSearch","event","value","target","ourFetch","useMemo","throttle","input","callback","a","async","fetch","locationJson","json","locations","map","location","Object","assign","useEffect","active","results","Autocomplete","style","width","getOptionLabel","option","name","filterOptions","x","onChange","code","renderInput","params","TextField","variant","fullWidth","autoHighlight","renderOption","parts","parse","match","Grid","container","alignItems","item","className","xs","part","index","key","fontWeight","highlight","Typography","window","moment","candidates","App","columns","title","field","formatter","formatterParams","symbol","precision","headerFilter","headerFilterFunc","headerValue","rowValue","align","outputFormat","cell","onRendered","getValue","humanize","parseDuration","id","data","height","layout","reactiveData","flightsTemplate","daysInTheFuture","howMany","futureDate","Date","setDate","getDate","Form","handleChange","e","this","setState","state","departureDateFrom","departureDateTo","returnDateFrom","returnDateTo","bind","handleSubmit","doStuff","preventDefault","$","show","getFares","myAirport","herAirport","console","log","hide","onSubmit","sm","utils","MomentUtils","DatePicker","inputVariant","d","Button","onClick","Component","formatKiwiDate","date","format","getFaresFromAirport","airport","fares","fareURL","replace","getJSON","result","forEach","fare","push","maxDiffHours","maybeAdd","myFare","herFare","myArrival","route","local_arrival","herArrival","myReturn","length","herReturn","arrivalDiff","Math","abs","returnDiff","msTogether","min","max","msApart","cityCodeTo","day","local_departure","destination","cityTo","countryTo","myArrivalDate","herArrivalDate","myReturnDate","herReturnDate","myDepartureDate","herDepartureDate","price","timeApart","duration","timeTogether","myLink","deep_link","herLink","myFares","herFares","s","split","numberPart","parseInt","unitPart","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c184076d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7f2c5d69.svg\";","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport throttle from 'lodash/throttle';\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport default function AirportSelector(props) {\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n    const loaded = React.useRef(false);\n    const label = props.label;\n    loaded.current = true;\n\n    const handleSearch = (event, value) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleChange = (event, value) => {\n        props.onChange({\n            target:{\n                name: props.name,\n                value: value.code\n            }\n        });\n    }\n\n    const ourFetch = React.useMemo(\n        () =>\n            throttle(\n                async function(input, callback) {\n                    const locationJson = await fetch('https://kiwiproxy.herokuapp.com//locations/query?term=' + input.input);\n                    const locations = await locationJson.json();\n                    callback(locations.locations.map(location => Object.assign(location, {'input': input.input})));\n                },\n                200\n            ),\n        [],\n    );\n\n    React.useEffect(() => {\n        let active = true;\n\n        if (inputValue === '') {\n            setOptions([]); \n            return undefined;\n        }\n\n        ourFetch({ input: inputValue }, results => {\n            if (active) {\n                setOptions(results || []);\n            }\n        });\n\n        return () => {\n            active = false;\n        };\n    }, [inputValue, ourFetch]);\n\n    return (\n        <Autocomplete\n            style={{ width: \"240px\" }}\n            getOptionLabel={option => (typeof option === 'string' ? option : option.name)}\n            filterOptions={x => x}\n            options={options}\n            onChange={handleChange}\n            renderInput={params => (\n                <TextField\n                    {...params}\n                    label={label}\n                    variant=\"outlined\"\n                    fullWidth\n                    autoHighlight={true}\n                    onChange={handleSearch}\n                />\n            )}\n            renderOption={option => {\n                const parts = parse(\n                    option.name,\n                    match(option.name, option.input)\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                    {part.text}\n                                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.name}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n","import Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from \"moment\";\nimport $ from \"jquery\";\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport 'react-tabulator/lib/styles.css';\nimport 'react-tabulator/lib/css/tabulator.min.css';\nimport { ReactTabulator } from 'react-tabulator';\nimport logo from './logo.svg';\nimport './App.css';\nimport AirportSelector from './AirportSelector.js';\n\n// for tabulator\nwindow.moment = moment;\n\nconst candidates = [];\n\nfunction App() {\n    const columns = [\n        {\n            title: \"Price\",\n            field: \"price\",\n            formatter: \"money\",\n            formatterParams: {\n                symbol: \"€\",\n                precision: 0\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => headerValue >= rowValue,\n        },\n        {\n            title: \"Destination\",\n            field: \"destination\",\n            headerFilter: true\n        },\n        {\n            title: \"You\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"myArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"myReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"myLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Them\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"herArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"herReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"herLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Together\",\n            field: \"timeTogether\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) <= rowValue,\n        },\n        {\n            title: \"Apart\",\n            field: \"timeApart\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) >= rowValue,\n        },\n    ];\n    return (\n        <div>\n            <Form />\n             <div id=\"loading\">✈</div>\n            <ReactTabulator\n                data={candidates}\n                columns={columns}\n                options={{\n                    height:\"100%\",\n                    layout:\"fitColumns\",\n                    reactiveData:true,\n                }}\n            />\n        </div>\n  );\n}\n\nexport default App;\n\nconst flightsTemplate = 'https://kiwiproxy.herokuapp.com/v2/search?fly_from=<airport>&dateFrom=<outDateFrom>&dateTo=<outDateTo>&returnFrom=<inDateFrom>&returnTo=<inDateTo>&curr=EUR&ret_from_diff_airport=0';\n\nfunction daysInTheFuture(howMany) {\n    var futureDate = new Date();\n    return moment(futureDate.setDate(futureDate.getDate() + howMany));\n    return futureDate.toISOString().split('T')[0];\n}\n\nfunction getSuggestionValue(suggestion) {\n    return suggestion.code;\n}\n\nfunction renderSuggestion(suggestion) {\n    return (\n        <span>{suggestion.code} {suggestion.name}</span>\n    );\n}\n\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureDateFrom: daysInTheFuture(5),\n            departureDateTo: daysInTheFuture(6),\n            returnDateFrom: daysInTheFuture(9),\n            returnDateTo: daysInTheFuture(10),\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.doStuff = this.doStuff.bind(this);\n    }\n\n    handleChange = function(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    async doStuff() {\n        await startLoading();\n        const maxDiffHours = 72;\n        await getFares(this.state.myAirport, this.state.herAirport, maxDiffHours, candidates, this.state.departureDateFrom, this.state.departureDateTo, this.state.returnDateFrom, this.state.returnDateTo);\n        console.log(candidates);\n        endLoading();\n    }\n\n    renderInput = input => input.name;\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <Grid container>\n                    <Grid item xs={6} sm={2}>\n                        <MuiPickersUtilsProvider name=\"departureDateFrom\" utils={MomentUtils}>\n                            <DatePicker label=\"Departure from\" value={this.state.departureDateFrom} inputVariant=\"outlined\" onChange={d => this.setState({departureDateFrom: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item xs={6} sm={2}>\n                        <MuiPickersUtilsProvider name=\"departureDateTo\" utils={MomentUtils}>\n                            <DatePicker label=\"to\" value={this.state.departureDateTo} inputVariant=\"outlined\" onChange={d => this.setState({departureDateTo: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item xs={6} sm={2}>\n                        <MuiPickersUtilsProvider name=\"returnDateFrom\" utils={MomentUtils}>\n                            <DatePicker label=\"Return from\" value={this.state.returnDateFrom} inputVariant=\"outlined\" onChange={d => this.setState({returnDateFrom: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item xs={6} sm={2}>\n                        <MuiPickersUtilsProvider name=\"returnDateTo\" utils={MomentUtils}>\n                            <DatePicker label=\"to\" value={this.state.returnDateTo} inputVariant=\"outlined\" onChange={d => this.setState({returnDateTo: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item xs={6} sm={2}>\n                        <AirportSelector\n                            id=\"myAirport\"\n                            name=\"myAirport\"\n                            value={this.state.myAirport}\n                            onChange={this.handleChange}\n                            label=\"Your origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item xs={6} sm={2}>\n                        <AirportSelector\n                            id=\"herAirport\"\n                            name=\"herAirport\"\n                            value={this.state.herAirport}\n                            onChange={this.handleChange}\n                            label=\"Their origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item xs={6} sm={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.doStuff}>Search</Button>\n                    </Grid>\n                </Grid>\n                \n            </form>\n        );\n    }\n}\n\nasync function startLoading() {\n    $(\"#loading\").show();\n}\n\nasync function endLoading() {\n    $(\"#loading\").hide();\n}\n\nfunction formatKiwiDate(date) {\n    return date.format('DD/MM/YYYY');\n    console.log(date);\n    return date.split('-').reverse().join('/');\n}\n\nasync function getFaresFromAirport(airport, fares, departureDateFrom, departureDateTo, returnDateFrom, returnDateTo) {\n    const fareURL = flightsTemplate.replace(\n        '<airport>', airport\n    ).replace(\n        '<outDateFrom>', formatKiwiDate(departureDateFrom)\n    ).replace(\n        '<outDateTo>', formatKiwiDate(departureDateTo)\n    ).replace(\n        '<inDateFrom>', formatKiwiDate(returnDateFrom)\n    ).replace(\n        '<inDateTo>', formatKiwiDate(returnDateTo)\n    );\n    await $.getJSON(\n        fareURL,\n        function(result) {\n            (result.data || []).forEach(function(fare) {\n                fares.push(fare);\n            });\n        }\n    );\n}\n\nasync function getFares(myAirport, herAirport, maxDiffHours, candidates, departureDateFrom, departureDateTo, returnDateFrom, returnDateTo) {\n    var maybeAdd = function(myFare, herFare) {\n        const myArrival = new Date(myFare.route[0].local_arrival);\n        const herArrival = new Date(herFare.route[0].local_arrival);\n        const myReturn = new Date(myFare.route[myFare.route.length - 1].local_arrival);\n        const herReturn = new Date(herFare.route[herFare.route.length - 1].local_arrival);\n        const arrivalDiff = Math.abs(myArrival - herArrival);\n        const returnDiff = Math.abs(myReturn - herReturn);\n        const msTogether = Math.min(myReturn, herReturn) - Math.max(myArrival, herArrival);\n        const msApart = arrivalDiff + returnDiff;\n        if(arrivalDiff + returnDiff > maxDiffHours * 60 * 60 * 1000) return;\n        if(myFare.cityCodeTo !== herFare.cityCodeTo) return;\n        if(msTogether < 24 * 60 * 60 * 1000) return;\n        if(msTogether <= msApart) return;\n        candidates.push({\n            day: myFare.route[0].local_departure,\n            destination: myFare.cityTo + ', ' + myFare.countryTo.name,\n            myArrivalDate: myFare.route[0].local_arrival,\n            herArrivalDate: herFare.route[0].local_arrival,\n            myReturnDate: myFare.route[myFare.route.length - 1].local_arrival,\n            herReturnDate: herFare.route[herFare.route.length - 1].local_arrival,\n            myDepartureDate: myFare.route[0].local_departure,\n            herDepartureDate: herFare.route[0].local_departure,\n            price: myFare.price + herFare.price,\n            timeApart: moment.duration(msApart),\n            timeTogether: moment.duration(msTogether),\n            myLink: myFare.deep_link,\n            herLink: herFare.deep_link\n        });\n    };\n\n    const myFares = [];\n    const herFares = [];\n    await getFaresFromAirport(myAirport, myFares, departureDateFrom, departureDateTo, returnDateFrom, returnDateTo);\n    await getFaresFromAirport(herAirport, herFares, departureDateFrom, departureDateTo, returnDateFrom, returnDateTo);\n    myFares.forEach(\n        function(myFare) {\n            herFares.forEach(\n                function(herFare){\n                    maybeAdd(myFare, herFare);\n                }\n            );\n        }\n    );\n}\n\nfunction parseDuration(s) {\n    const parts = s.split(' ');\n    const numberPart = parts[0] === 'a' || parts[0] === 'an' ? 1 : parseInt(parts[0]);\n    const unitPart =  parts[1][parts[1].length -1] === 's' ? parts[1] : parts[1] + 's';\n    return moment.duration(numberPart, unitPart);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}