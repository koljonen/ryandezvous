{"version":3,"sources":["cachedFetch.js","flightsearch.js","AirportSelector.js","Form.js","FlightsChart.js","ResultsTabs.js","App.js","index.js"],"names":["cachedFetch","a","async","url","expiry","cachedString","localStorage","getItem","cached","JSON","parse","Date","now","removeItem","data","fetch","fetched","json","setItem","stringify","formatKiwiDate","date","moment","format","addDays","days","result","setDate","getDate","getFaresFromAirport","throttle","airport","state","dateFlexibility","dateFrom","departureDate","dateTo","returnFrom","returnDate","returnTo","fareURL","buildUrl","path","queryParams","fly_from","id","curr","ret_from_diff_airport","fly_to","destination","undefined","max_stopovers","max_fly_duration","replace","flights","arrayToDict","map","forEach","flight","getKey","push","cityCodeTo","getFlights","yourFares","theirFares","Object","keys","yourOrigin","theirOrigin","yourFaresDict","theirFaresDict","yourFaresToDestination","yourFaresToDestinationDict","newFlights","theirFaresToDestination","theirFaresToDestinationDict","getFares","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","getURL","locationSearch","term","locations","location","assign","AirportSelector","props","classes","React","useState","inputValue","setInputValue","options","setOptions","handleSearch","event","value","target","ourFetch","useMemo","input","callback","useEffect","active","results","Autocomplete","style","width","getOptionLabel","option","name","filterOptions","x","onChange","renderInput","params","TextField","required","label","variant","fullWidth","renderOption","parts","match","Grid","container","alignItems","item","className","xs","part","index","key","fontWeight","highlight","Typography","nextThursday","add","isoWeekday","requiredParams","getLocationURL","fillDefault","whichAirport","filter","Form","allowSubmit","doStuff","handleChange","e","this","setState","query","bind","startLoading","finishLoading","handleSubmit","setDepartureDate","prevProps","prevState","snapshot","oldMatch","newMatch","setAirport","which","newState","preventDefault","reduce","tot","par","loading","newDate","clearFlights","setQuery","toDate","fares","addFlights","onSubmit","sm","md","xl","utils","MomentUtils","DatePicker","disablePast","inputVariant","d","minDate","Button","disabled","onClick","Component","FlightsChart","yourFlight","theirFlight","setYourFlight","setTheirFlight","sortBy","yourMaxPrice","theirMaxPrice","addYoursOrTheirs","sort","y","Math","sign","price","utc_departure","utc_arrival","route","length","data_param","type","role","p","fare","maxPrice","yours","theirs","yoursOrTheirs","selection","previousLeg","returnLeg","there","flyFrom","flyTo","formatTime","local_departure","local_arrival","back","tooltip","output","leg","colors","flight_color","gap_color","bars","fareToDatum","flat","chartEvents","eventName","chartSelection","chartWrapper","getChart","getSelection","selectedFareID","row","selectedFare","console","error","height","chartType","loader","timeline","colorByRowLabel","groupByRowLabel","showRowLabels","isHtml","rootProps","time","ResultsTabs","newValue","indexOf","expand","Paper","Tabs","scrollButtons","values","myFirst","minPrice","cityTo","countryTo","Tab","FlightSelector","setSortBy","setYourMaxPrice","setTheirMaxPrice","SelectedFlights","min","yourMax","max","theirMax","yourMin","Infinity","theirMin","gutterBottom","Select","MenuItem","Slider","defaultValue","onChangeCommitted","valueLabelDisplay","c","Flight","clearFlight","Card","CardHeader","title","cityFrom","action","IconButton","aria-label","Avatar","src","airline","CardContent","CardActions","Link","rel","href","deep_link","Loading","window","updateLocale","week","dow","App","useQueryParams","StringParam","DateParam","NumberParam","setLoading","setFlights","routing","ReactRouterRoute","Route","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9480df6.chunk.js","sourcesContent":["export default async function cachedFetch({url, expiry}) {\n    const cachedString = localStorage.getItem(url);\n    if(cachedString) {\n        const cached = JSON.parse(cachedString);\n        if(cached.expiry < Date.now()) localStorage.removeItem(url);\n        else return cached.data;\n    }\n    const fetched = await fetch(url);\n    const data = await fetched.json();\n    localStorage.setItem(\n        url,\n        JSON.stringify({data: data, expiry: expiry})\n    );\n    return data;\n}\n","import throttle from 'lodash/throttle';\nimport buildUrl from 'build-url';\nimport moment from \"moment\";\n\nfunction formatKiwiDate(date) {\n    return moment(date).format('DD/MM/YYYY');\n}\n\nfunction addDays(date, days) {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\nconst getFaresFromAirport = throttle(\n    async function (airport, state) {\n        const dateFlexibility = state.dateFlexibility || 0;\n        const dateFrom = addDays(state.departureDate, -dateFlexibility);\n        const dateTo = addDays(state.departureDate, dateFlexibility);\n        const returnFrom = addDays(state.returnDate, -dateFlexibility);\n        const returnTo = addDays(state.returnDate, dateFlexibility);\n        const fareURL = buildUrl(\n            'https://kiwiproxy.herokuapp.com',\n            {\n                path: \"v2/search\",\n                queryParams: {\n                    fly_from: airport.id,\n                    dateFrom: formatKiwiDate(dateFrom),\n                    dateTo: formatKiwiDate(dateTo),\n                    returnFrom: formatKiwiDate(returnFrom),\n                    returnTo: formatKiwiDate(returnTo),\n                    curr: 'EUR',\n                    ret_from_diff_airport: 0,\n                    fly_to: state.destination ? state.destination.id : undefined,\n                    max_stopovers: state.max_stopovers || 0,\n                    max_fly_duration: state.max_fly_duration,\n                }\n            }\n        ).replace(/%2F/g, '/');\n        const flights = (await (await fetch(fareURL)).json()).data;\n        return flights;\n    },\n    200\n);\n\nfunction arrayToDict(flights, map = {}) {\n    flights.forEach(\n        (flight) => {\n            if(getKey(flight) in map) map[getKey(flight)].push(flight);\n            else map[getKey(flight)] = [flight];\n            return map;\n        },\n        {}\n    );\n    return map;\n}\n\nfunction getKey(flight) {\n    return flight.cityCodeTo;\n}\n\nfunction getFlights({yourFares, theirFares}) {\n    const flights = {};\n    for(const destination of Object.keys(theirFares)) {\n        if(destination in yourFares);\n        else continue;\n        flights[destination] = {\n            yourFares: yourFares[destination],\n            theirFares: theirFares[destination]\n        }\n    }\n    return flights;\n}\n\nasync function* getFares(state) {\n    const yourFares = await getFaresFromAirport(state.yourOrigin, state);\n    const theirFares = await getFaresFromAirport(state.theirOrigin, state);\n    const yourFaresDict = arrayToDict(yourFares);\n    const theirFaresDict = arrayToDict(theirFares);\n    yield getFlights({yourFares: yourFaresDict, theirFares:theirFaresDict});\n    for(const destination of Object.keys(theirFaresDict)) {\n        if(destination in yourFaresDict) continue;\n        const yourFaresToDestination = await getFaresFromAirport(\n            state.yourOrigin,\n            {...state, destination: {id: destination}}\n        );\n        const yourFaresToDestinationDict = arrayToDict(yourFaresToDestination);\n        const newFlights = getFlights({yourFares: yourFaresToDestinationDict, theirFares: theirFaresDict});\n        yield newFlights;\n        // todo: add to dict\n    }\n    for(const destination of Object.keys(yourFaresDict)) {\n        if(destination in theirFaresDict) continue;\n        const theirFaresToDestination = await getFaresFromAirport(\n            state.theirOrigin,\n            {...state, destination: {id: destination}}\n        );\n        const theirFaresToDestinationDict = arrayToDict(theirFaresToDestination);\n        const newFlights = getFlights({yourFares: yourFaresDict, theirFares: theirFaresToDestinationDict});\n        yield newFlights;\n        // todo: add to dict\n    }\n}\n\nexport default getFares;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport throttle from 'lodash/throttle';\nimport cachedFetch from \"./cachedFetch\";\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nconst getURL = async (url) => await cachedFetch({\n    url: url,\n    expiry: new Date(new Date() + 1000 * 60 * 60 * 24 * 7)\n});\n\nasync function locationSearch({term, id}) {\n    const url = 'https://kiwiproxy.herokuapp.com/locations/' + (id ? `id?id=${id}` : `/query?&term=${term}`);\n    const locations = await getURL(url);\n    return locations.locations.map(location => Object.assign(location, {'input': term || id}))\n}\n\nexport default function AirportSelector(props) {\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n\n    const handleSearch = (event, value) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleChange = (event, value) => {\n        props.onChange({\n            target:{\n                name: props.name,\n                value: value\n            }\n        });\n    }\n\n    const ourFetch = React.useMemo(\n        () => throttle(\n            async function(input, callback) {\n                const locations = await locationSearch({term: input});\n                callback(locations);\n            },\n            200\n        ),\n        [],\n    );\n\n    React.useEffect(\n        () => {\n            let active = true;\n            if (inputValue === '') {\n                setOptions([]);\n                return undefined;\n            }\n            ourFetch(\n                inputValue,\n                results => {\n                    if (active) {\n                        setOptions(results || []);\n                    }\n                }\n            );\n\n            return () => {\n                active = false;\n            };\n        },\n        [inputValue, ourFetch]\n    );\n\n    return (\n        <Autocomplete\n            style={{ width: \"240px\" }}\n            getOptionLabel={option => (typeof option === 'string' ? option : option.name)}\n            filterOptions={x => x}\n            options={options}\n            onChange={handleChange}\n            value={props.value}\n            renderInput={params => (\n                <TextField\n                    required={props.required}\n                    {...params}\n                    label={props.label}\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={handleSearch}\n                />\n            )}\n            renderOption={option => {\n                const parts = parse(\n                    option.name,\n                    match(option.name, option.input)\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                    {part.text}\n                                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.name}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n","import cachedFetch from \"./cachedFetch\";\nimport getFares from './flightsearch.js';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport AirportSelector from './AirportSelector.js';\n\n\nfunction nextThursday() {\n    return moment().add((moment().isoWeekday() >= 4  ? 12 : 4) - moment().isoWeekday(), 'days');\n}\n\nconst requiredParams = ['departureDate', 'returnDate', 'yourOrigin', 'theirOrigin'];\n\nconst getLocationURL = async (url) => await cachedFetch({\n    url: url,\n    expiry: new Date(new Date() + 1000 * 60 * 60 * 24 * 7 * 4)\n});\n\nasync function fillDefault(whichAirport, state) {\n    if(state[whichAirport]) {\n        const url = `https://kiwiproxy.herokuapp.com/locations/id?id=${state[whichAirport]}`;\n        const locations = await getLocationURL(url);\n        state[whichAirport] = locations.locations.filter(\n            x => x.id === state[whichAirport]\n        )[0];\n    }\n}\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureDate: nextThursday(),\n            returnDate: nextThursday().add(4, 'days'),\n            destination: \"\",\n            ...props.query\n        };\n        \n        this.state.departureDate = moment(this.state.departureDate);\n        this.state.returnDate = moment(this.state.returnDate);\n        this.allowSubmit = this.allowSubmit.bind(this);\n        this.startLoading = props.startLoading;\n        this.finishLoading = props.finishLoading;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.doStuff = this.doStuff.bind(this);\n        //this.componentDidUpdate = this.componentDidUpdate.bind(this);\n        this.setDepartureDate = this.setDepartureDate.bind(this);\n        async function fillDefaults(state, allowSubmit, doStuff) {\n            await fillDefault('yourOrigin', state);\n            await fillDefault('theirOrigin', state);\n            await fillDefault('destination', state);\n            if (allowSubmit()) doStuff();\n        }\n        fillDefaults(this.state, this.allowSubmit, this.doStuff);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const setState = this.setState.bind(this)\n        const oldMatch = prevProps.query;\n        const newMatch = this.props.query;\n        if(newMatch.returnDate !== oldMatch.returnDate) {\n            this.setState({returnDate: moment(newMatch.returnDate)});\n        }\n        if(newMatch.dateFlexibility !== oldMatch.dateFlexibility) {\n            this.setState({dateFlexibility: newMatch.dateFlexibility});\n        }\n        if(newMatch.max_fly_duration !== oldMatch.max_fly_duration) {\n            this.setState({max_fly_duration: newMatch.max_fly_duration});\n        }\n        if(newMatch.max_stopovers !== oldMatch.max_stopovers) {\n            this.setState({max_stopovers: newMatch.max_stopovers});\n        }\n        if(newMatch.departureDate !== oldMatch.departureDate) this.setDepartureDate(newMatch.departureDate);\n        async function setAirport(which)  {\n            if(newMatch[which] !== oldMatch[which]) {\n                const newState = {};\n                newState[which] = newMatch[which];\n                await fillDefault(which, newState);\n                setState(newState);\n            }\n        }\n        setAirport('yourOrigin');\n        setAirport('theirOrigin');\n        setAirport('destination');\n    }\n    \n    handleChange = function(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    allowSubmit() {\n        return requiredParams.reduce(\n            (tot, par) => tot && !!this.state[par],\n            true\n        ) && !this.props.loading;\n    }\n\n    setDepartureDate(newDate) {\n        if(newDate > this.state.returnDate) {\n            this.setState({\n                returnDate: moment(this.state.returnDate + (newDate - this.state.departureDate))\n            });\n        }\n        this.setState({departureDate: moment(newDate)});\n    }\n\n    async doStuff() {\n        this.startLoading();\n        this.props.clearFlights();\n        this.props.setQuery({\n            yourOrigin: this.state.yourOrigin.id,\n            theirOrigin: this.state.theirOrigin.id,\n            destination: this.state.destination ? this.state.destination.id : undefined,\n            departureDate: this.state.departureDate.toDate(),\n            returnDate: this.state.returnDate.toDate()\n        });\n        for await (const fares of await getFares(this.state)) this.props.addFlights(fares);\n        this.finishLoading();\n    }\n\n    renderInput = input => input.name;\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <Grid container spacing={2}>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"departureDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                disablePast\n                                variant=\"inline\"\n                                label=\"Departure\"\n                                value={this.state.departureDate}\n                                inputVariant=\"outlined\"\n                                onChange={this.setDepartureDate}\n                            />\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"returnDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                variant=\"inline\"\n                                label=\"Return\"\n                                value={this.state.returnDate}\n                                inputVariant=\"outlined\"\n                                onChange={d => this.setState({returnDate: d})}\n                                minDate={this.state.departureDate}\n                            />\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"yourOrigin\"\n                            name=\"yourOrigin\"\n                            value={this.state.yourOrigin}\n                            onChange={this.handleChange}\n                            label=\"Your origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"theirOrigin\"\n                            name=\"theirOrigin\"\n                            value={this.state.theirOrigin}\n                            onChange={this.handleChange}\n                            label=\"Their origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            id=\"destination\"\n                            name=\"destination\"\n                            value={this.state.destination}\n                            onChange={this.handleChange}\n                            label=\"Destination\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <Button variant=\"contained\" color=\"primary\" disabled={!this.allowSubmit()} onClick={this.doStuff}>Search</Button>\n                    </Grid>\n                </Grid>\n                \n            </form>\n        );\n    }\n}\n\nexport default Form\n","import moment from \"moment\";\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\n\nexport default function FlightsChart({\n    flights,\n    yourFlight,\n    theirFlight,\n    setYourFlight,\n    setTheirFlight,\n    sortBy,\n    yourMaxPrice,\n    theirMaxPrice,\n}) {\n    const fares = [\n        ...addYoursOrTheirs(flights.yourFares, 'yours'),\n        ...addYoursOrTheirs(flights.theirFares, 'theirs'),\n    ];\n    fares.sort((x, y) => {\n        if(x.id === theirFlight || x.id === yourFlight) return -1;\n        if(y.id === theirFlight || y.id === yourFlight) return 1;\n        if(sortBy === 'price') return Math.sign(x.price - y.price);\n        if(sortBy === 'time') {\n            const ret = Math.sign(\n                new Date(x.utc_departure) - new Date(y.utc_departure) ||\n                new Date(x.utc_arrival) - new Date(y.utc_arrival) ||\n                new Date(x.utc_arrival) - new Date(y.utc_arrival) ||\n                new Date(x.route[x.route.length - 1].utc_arrival) - new Date(y.route[y.route.length - 1].utc_arrival) ||\n                x.price - y.price\n            );\n            return ret;\n        }\n        return 0;\n    });\n\n    const data_param = [\n        [\n            { type: 'string', id: 'id' },\n            { type: 'string', id: 'label' },\n            { type: 'string', role: 'style' },\n            { type: 'string', role: 'tooltip', p: {'html': true}},\n            { type: 'date', id: 'Start' },\n            { type: 'date', id: 'End' }\n        ],\n        ...fares.filter(fare => {\n            const maxPrice = {yours: yourMaxPrice, theirs: theirMaxPrice}[fare.yoursOrTheirs];\n            return !maxPrice || maxPrice >= fare.price;\n        }).map(\n            fare => fareToDatum({fare:fare, yourFlight: yourFlight, theirFlight: theirFlight})\n        ).filter(x => x).flat()\n    ];\n    const chartEvents=[\n      {\n        eventName: 'select',\n        callback: function({chartWrapper}) {\n            const chartSelection = chartWrapper.getChart().getSelection();\n            const selectedFareID = data_param[chartSelection[0].row][0];\n            const selectedFare = fares.filter(x => x.id === selectedFareID)[0];\n            if(selectedFare.yoursOrTheirs === 'yours') {\n                if(selectedFare.id === yourFlight) setYourFlight('');\n                else setYourFlight(selectedFare.id);\n            }\n            else if(selectedFare.yoursOrTheirs === 'theirs') {\n                if(selectedFare.id === theirFlight) setTheirFlight('');\n                else setTheirFlight(selectedFare.id);\n            }\n            else console.error('unexpected yoursOrTheirs', selectedFare.yoursOrTheirs);\n        }\n      }\n    ];\n    return (\n            <Chart\n                width={'100%'}\n                height={yourFlight && theirFlight ? '200px' : '800px'}\n                chartType=\"Timeline\"\n                loader={<div>Loading Chart</div>}\n                data={data_param}\n                chartEvents={chartEvents} // <- this is event handler\n                options={{\n                    timeline: {\n                        colorByRowLabel: false,\n                        groupByRowLabel: true,\n                        showRowLabels: false\n                    },\n                    tooltip: {\n                        isHtml: true\n                    }\n\n                }}\n                rootProps={{ 'data-testid': '1' }}\n            />\n    );\n}\n\nfunction addYoursOrTheirs(fares, yoursOrTheirs) {\n    return fares.map(x => {\n        return {...x, ...{yoursOrTheirs: yoursOrTheirs}}\n    });\n}\n\nfunction fareToDatum({fare, yourFlight, theirFlight}) {\n    const selection = yourFlight || theirFlight;\n    if(yourFlight && fare.yoursOrTheirs === 'yours' && fare.id !== yourFlight) return null;\n    if(theirFlight && fare.yoursOrTheirs === 'theirs' && fare.id !== theirFlight) return null;\n    const returnLeg = fare.route[fare.route.length - 1];\n    const price = `€ ${fare.price}`\n    const there = `${fare.flyFrom} -> ${fare.flyTo} ${formatTime(fare.local_departure)} – ${formatTime(fare.local_arrival)}`;\n    const back = `${returnLeg.flyFrom} -> ${returnLeg.flyTo} ${formatTime(returnLeg.local_departure)} – ${formatTime(returnLeg.local_arrival)}`;\n    const label = `${price} | ${there} | ${back}`;\n    const tooltip = fare.route.reduce(\n        (output, leg) => `${output}<br/>${formatTime(leg.local_departure)} ${leg.flyFrom} -> ${leg.flyTo} ${formatTime(leg.local_arrival)}}`,\n        price\n    );\n    const colors = {\n        theirs: ['#DC3912', '#FFAAAA'],\n        yours: ['#3366CC', '#88AAFF']\n    }[fare.yoursOrTheirs];\n    const flight_color = fare.id === selection ? colors[1] : colors[0];\n    const gap_color = fare.id === selection ? colors[0] : colors[1];\n    const bars = [];\n    let previousLeg;\n    for(const leg of fare.route) {\n        bars.push([\n            fare.id,\n            '',\n            `color: ${flight_color};`,\n            tooltip,\n            new Date(leg.utc_departure),\n            new Date(leg.utc_arrival)\n        ]);\n        if(previousLeg) bars.push([\n            fare.id,\n            previousLeg.flyTo === fare.flyTo ? label : '',\n            `color: ${gap_color};`,\n            tooltip,\n            new Date(previousLeg.utc_arrival),\n            new Date(leg.utc_departure)\n        ]);\n        previousLeg = leg;\n    };\n    return bars;\n}\n\nfunction formatTime(time) {\n    return moment(time).format('DD MMM HH:mm');\n}\n","import moment from \"moment\";\nimport FlightsChart from \"./FlightsChart\";\nimport React from 'react';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from '@material-ui/core/CardActions';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n    Typography,\n    MenuItem,\n    Slider,\n    Select,\n    Grid,\n    Link,\n    Tabs,\n    Tab,\n    Paper,\n    Card,\n    CardContent,\n    Avatar,\n    IconButton,\n} from '@material-ui/core';\n\nexport default function ResultsTabs(props) {\n    const setDestination = (event, newValue) => {\n        props.setQuery({expand: newValue, theirFlight: null, yourFlight: null});\n    };\n    const setYourFlight = (newValue) => props.setQuery({yourFlight: newValue});\n    const setTheirFlight = (newValue) => props.setQuery({theirFlight: newValue});\n    const setYourMaxPrice = (event, value) => props.setQuery({yourMaxPrice: value});\n    const setTheirMaxPrice = (event, value) => props.setQuery({theirMaxPrice: value});\n    const setSortBy = (event, newValue) => props.setQuery({sortBy: event.target.value});\n    const airports = Object.keys(props.flights);\n    const value = airports.indexOf(props.query.expand) !== -1 ? props.query.expand : false;\n    return (\n        <Paper>\n            <Tabs variant=\"scrollable\" scrollButtons=\"auto\" value={value} onChange={setDestination}>\n                {Object.values(props.flights).map(\n                    flight => {\n                        const myFirst = flight.yourFares[0];\n                        const price = minPrice(flight.yourFares) + minPrice(flight.theirFares);\n                        const label = `€ ${price} ${myFirst.cityTo}, ${myFirst.countryTo.name}`;\n                        return <Tab key={myFirst.cityCodeTo} value={myFirst.cityCodeTo} label={label}/>;\n                    }\n                )\n                }\n            </Tabs>\n            <FlightSelector\n                cityCodeTo={props.query.expand}\n                yourFlight={props.query.yourFlight}\n                theirFlight={props.query.theirFlight}\n                flights={props.flights[props.query.expand]}\n                setYourFlight={setYourFlight}\n                setTheirFlight={setTheirFlight}\n                sortBy={props.query.sortBy || 'price'}\n                setSortBy={setSortBy}\n                yourMaxPrice={props.query.yourMaxPrice}\n                theirMaxPrice={props.query.theirMaxPrice}\n                setYourMaxPrice={setYourMaxPrice}\n                setTheirMaxPrice={setTheirMaxPrice}\n            />\n            <SelectedFlights\n                yourFlight={props.query.yourFlight}\n                theirFlight={props.query.theirFlight}\n                setTheirFlight={setTheirFlight}\n                setYourFlight={setYourFlight}\n                flights={props.flights[props.query.expand]}\n            />\n        </Paper>\n    )\n}\n\nfunction minPrice(fares) {\n    return Math.min(...(fares.map(fare => fare.price)));\n}\n\nfunction FlightSelector({\n    flights,\n    yourFlight,\n    theirFlight,\n    setYourFlight,\n    setTheirFlight,\n    sortBy,\n    setSortBy,\n    yourMaxPrice,\n    theirMaxPrice,\n    setYourMaxPrice,\n    setTheirMaxPrice,\n}) {\n    if(!flights) return null;\n    if(yourFlight && theirFlight) return null;\n    const yourMax = flights.yourFares.reduce((maxPrice, fare) => Math.max(fare.price, maxPrice), 0);\n    const theirMax = flights.theirFares.reduce((maxPrice, fare) => Math.max(fare.price, maxPrice), 0);\n    const yourMin = flights.yourFares.reduce((minPrice, fare) => Math.min(fare.price, minPrice), Infinity);\n    const theirMin = flights.theirFares.reduce((minPrice, fare) => Math.min(fare.price, minPrice), Infinity);\n    return (\n        <div>\n            <Grid container spacing={10}>\n                <Grid item xs/>\n                <Grid item xs>\n                    <Typography gutterBottom>Sorting</Typography>\n                    <Select onChange={setSortBy} value={sortBy}>\n                        <MenuItem value=\"price\">↑Price</MenuItem>\n                        <MenuItem value=\"time\">↑Time</MenuItem>\n                    </Select>\n                </Grid>\n                <Grid item xs>\n                    <Typography gutterBottom>Max price</Typography>\n                    <Slider\n                        defaultValue={yourMaxPrice || yourMax}\n                        onChangeCommitted={setYourMaxPrice}\n                        valueLabelDisplay=\"auto\"\n                        min={yourMin}\n                        max={yourMax}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography gutterBottom>Max price</Typography>\n                    <Slider\n                        defaultValue={theirMaxPrice || theirMax}\n                        onChangeCommitted={setTheirMaxPrice}\n                        valueLabelDisplay=\"auto\"\n                        color=\"secondary\"\n                        min={theirMin}\n                        max={theirMax}\n                    />\n                </Grid>\n                <Grid item xs/>\n            </Grid>\n            <FlightsChart\n                flights={flights}\n                yourFlight={yourFlight}\n                theirFlight={theirFlight}\n                setYourFlight={setYourFlight}\n                setTheirFlight={setTheirFlight}\n                sortBy={sortBy}\n                yourMaxPrice={yourMaxPrice}\n                theirMaxPrice={theirMaxPrice}\n                setYourMaxPrice={setYourMaxPrice}\n                setTheirMaxPrice={setTheirMaxPrice}\n            />\n        </div>\n    );\n}\n\nfunction SelectedFlights({yourFlight, theirFlight, flights, setTheirFlight, setYourFlight}) {\n    if(!flights) return null;\n    const theirs = theirFlight && flights.theirFares.filter(c => c.id === theirFlight)[0];\n    const yours = yourFlight && flights.yourFares.filter(c => c.id === yourFlight)[0];\n    if(!theirs && !yours) return null;\n    return <Paper>\n        <Grid container spacing={10}>\n            {theirs && <Flight flight={theirs} clearFlight={() => setTheirFlight(null)}/>}\n            {yours && <Flight flight={yours} clearFlight={() => setYourFlight(null)}/>}\n        </Grid>\n    </Paper>\n}\n\nfunction Flight({flight, clearFlight}) {\n    return <Grid item>\n        <Card>\n            <CardHeader\n                title={`${flight.cityFrom} -> ${flight.cityTo}`}\n                action={<IconButton aria-label=\"delete\" onClick={clearFlight}><CloseIcon/></IconButton>}\n            />\n            {flight.route.map(\n                leg => {\n                    return <div key={leg.id}>\n                        <Avatar src={`https://images.kiwi.com/airlines/64/${leg.airline}.png`}/>\n                        <CardContent>\n                            {formatTime(leg.local_departure)} {leg.cityFrom} ({leg.flyFrom})\n                            <br/>\n                            {formatTime(leg.local_arrival)} {leg.cityTo} ({leg.flyTo})\n                        </CardContent>\n                    </div>\n                }\n            )}\n            <CardActions>\n                <Link target=\"_blank\" rel=\"noopener\" href={flight.deep_link}>€ {flight.price}</Link>\n            </CardActions>\n        </Card>\n    </Grid>\n}\n\nfunction formatTime(time) {\n    return moment(time).format('DD MMM HH:mm');\n}\n","import moment from \"moment\";\nimport React from 'react';\nimport './App.css';\nimport Form from './Form.js';\nimport ResultsTabs from './ResultsTabs.js';\nimport {\n  useQueryParams,\n  StringParam,\n  DateParam,\n  NumberParam,\n} from 'use-query-params';\n\n// for tabulator\nwindow.moment = moment;\nmoment.updateLocale('en', {\n    week: {\n      dow: 1,\n    },\n});\n\nfunction App(props) {\n    const [query, setQuery] = useQueryParams({\n        destination: StringParam,\n        theirOrigin: StringParam,\n        yourOrigin: StringParam,\n        departureDate: DateParam,\n        returnDate: DateParam,\n        dateFlexibility: NumberParam,\n        max_stopovers: NumberParam,\n        expand: StringParam,\n        yourFlight: StringParam,\n        theirFlight: StringParam,\n        sortBy: StringParam,\n        yourMaxPrice: NumberParam,\n        theirMaxPrice: NumberParam,\n        max_fly_duration: NumberParam,\n    });\n    const [loading, setLoading] = React.useState(0);\n    const [flights, setFlights] = React.useState({});\n    const startLoading = () => setLoading(loading + 1);\n    const finishLoading = () => setLoading(loading - 1);\n    const addFlights = (newFlights) => setFlights({...flights, ...newFlights});\n    const clearFlights = () => setFlights([]);\n    return (\n        <div>\n            <Form\n                addFlights={addFlights}\n                clearFlights={clearFlights}\n                startLoading={startLoading}\n                finishLoading={finishLoading}\n                loading={loading > 0}\n                query={query}\n                setQuery={setQuery}\n            />\n            <Loading id=\"loading\" loading={loading > 0}/>\n            <ResultsTabs flights={flights} setQuery={setQuery} query={query}/>\n        </div>\n  );\n}\n\nfunction Loading(props) {\n    return <div id={props.id}>{props.loading ? '✈' : ''}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Route, HashRouter as Router } from 'react-router-dom'\nimport { QueryParamProvider } from 'use-query-params';\nimport App from './App'\n\nconst routing = (\n<Router>\n    <QueryParamProvider ReactRouterRoute={Route}>\n        <App />\n    </QueryParamProvider>\n</Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n"],"sourceRoot":""}