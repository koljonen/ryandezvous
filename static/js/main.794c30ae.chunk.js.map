{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","moment","candidates","App","columns","title","field","formatter","formatterParams","symbol","precision","headerFilter","headerFilterFunc","headerValue","rowValue","align","outputFormat","label","target","cell","onRendered","getValue","humanize","parseDuration","id","data","options","height","layout","reactiveData","flightsTemplate","daysInTheFuture","howMany","futureDate","Date","setDate","getDate","toISOString","split","getSuggestionValue","suggestion","code","renderSuggestion","name","AirportSelector","props","onChange","event","newValue","setState","value","onSuggestionsFetchRequested","loadSuggestions","onSuggestionsClearRequested","suggestions","state","isLoading","lastRequestId","this","clearTimeout","fetch","locationJson","json","locations","inputProps","placeholder","React","Component","Form","handleChange","e","departureDateFrom","departureDateTo","returnDateFrom","returnDateTo","bind","handleSubmit","doStuff","preventDefault","a","async","$","show","getFares","myAirport","herAirport","console","log","hide","onSubmit","type","onClick","formatKiwiDate","date","reverse","join","getFaresFromAirport","airport","fares","fareURL","replace","getJSON","result","forEach","fare","push","maxDiffHours","maybeAdd","myFare","herFare","myArrival","route","local_arrival","herArrival","myReturn","length","herReturn","arrivalDiff","Math","abs","returnDiff","msTogether","min","max","msApart","cityCodeTo","day","local_departure","destination","cityTo","countryTo","myArrivalDate","herArrivalDate","myReturnDate","herReturnDate","myDepartureDate","herDepartureDate","price","duration","deep_link","myFares","herFares","s","parts","numberPart","parseInt","unitPart","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.794c30ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8a753739.svg\";","import moment from \"moment\";\nimport $ from \"jquery\";\nimport React from 'react';\nimport 'react-tabulator/lib/styles.css';\nimport 'react-tabulator/lib/css/tabulator.min.css';\nimport { ReactTabulator } from 'react-tabulator';\nimport Autosuggest from 'react-autosuggest';\nimport logo from './logo.svg';\nimport './App.css';\n\n// for tabulator\nwindow.moment = moment;\n\nconst candidates = [];\n\nfunction App() {\n    const columns = [\n        {\n            title: \"Price\",\n            field: \"price\",\n            formatter: \"money\",\n            formatterParams: {\n                symbol: \"â‚¬\",\n                precision: 0\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => headerValue >= rowValue,\n        },\n        {\n            title: \"Destination\",\n            field: \"destination\",\n            headerFilter: true\n        },\n        {\n            title: \"You\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"myArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"myReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"myLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Them\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"herArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"herReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"herLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Together\",\n            field: \"timeTogether\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) <= rowValue,\n        },\n        {\n            title: \"Apart\",\n            field: \"timeApart\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) >= rowValue,\n        },\n    ];\n    return (\n        <div>\n            <Form />\n             <div id=\"loading\">âœˆ</div>\n            <ReactTabulator\n                data={candidates}\n                columns={columns}\n                options={{\n                    height:\"100%\",\n                    layout:\"fitColumns\",\n                    reactiveData:true,\n                }}\n            />\n        </div>\n  );\n}\n\nexport default App;\n\nconst flightsTemplate = 'https://kiwiproxy.herokuapp.com/v2/search?fly_from=<airport>&dateFrom=<outDateFrom>&dateTo=<outDateTo>&returnFrom=<inDateFrom>&returnTo=<inDateTo>&curr=EUR&ret_from_diff_airport=0';\n\nfunction daysInTheFuture(howMany) {\n    var futureDate = new Date();\n    futureDate.setDate(futureDate.getDate() + howMany);\n    return futureDate.toISOString().split('T')[0];\n}\n\nfunction getSuggestionValue(suggestion) {\n    return suggestion.code;\n}\n\nfunction renderSuggestion(suggestion) {\n    return (\n        <span>{suggestion.code} {suggestion.name}</span>\n    );\n}\n\nclass AirportSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            suggestions: [],\n            isLoading: false\n        };\n        this.lastRequestId = null;\n    }\n\n    onChange = (event, { newValue }) => {\n        this.setState({\n            value: newValue\n        });\n        this.props.onChange({\n            target:{\n                name:[this.props.name],\n                value:newValue\n            }\n        });\n    };\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.loadSuggestions(value);\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n  \n    async loadSuggestions(value) {\n        // Cancel the previous request\n        if (this.lastRequestId !== null) {\n            clearTimeout(this.lastRequestId);\n        }\n        \n        this.setState({\n            isLoading: true\n        });\n        const locationJson = await fetch('https://kiwiproxy.herokuapp.com//locations/query?term=' + value);\n        const locations = await locationJson.json();\n        this.setState({\n            isLoading: false,\n            suggestions: locations.locations\n        });\n    }\n\n    render() {\n        const { value, suggestions, isLoading } = this.state;\n        const inputProps = {\n            placeholder: this.props.placeholder,\n            value,\n            onChange: this.onChange\n        };\n        return (\n            <Autosuggest \n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps} />\n        );\n    }\n}\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureDateFrom: daysInTheFuture(5),\n            departureDateTo: daysInTheFuture(6),\n            returnDateFrom: daysInTheFuture(9),\n            returnDateTo: daysInTheFuture(10),\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.doStuff = this.doStuff.bind(this);\n    }\n\n    handleChange = function(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    async doStuff() {\n        await startLoading();\n        const maxDiffHours = 72;\n        await getFares(this.state.myAirport, this.state.herAirport, maxDiffHours, candidates, this.state.departureDateFrom, this.state.departureDateTo, this.state.returnDateFrom, this.state.returnDateTo);\n        console.log(candidates);\n        endLoading();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <label>\n                    Departure:\n                    <input type=\"date\" value={this.state.departureDateFrom} name=\"departureDateFrom\" onChange={this.handleChange} />\n                </label>\n                <label>\n                     â€“\n                    <input type=\"date\" value={this.state.departureDateTo} name=\"departureDateTo\" onChange={this.handleChange} />\n                </label>\n                <label>\n                    Return:\n                    <input type=\"date\" value={this.state.returnDateFrom} name=\"returnDateFrom\" onChange={this.handleChange} />\n                </label>\n                <label>\n                     â€“\n                    <input type=\"date\" value={this.state.returnDateTo} name=\"returnDateTo\" onChange={this.handleChange} />\n                </label>\n                <AirportSelector name=\"myAirport\" value={this.state.myAirport} onChange={this.handleChange} placeholder=\"Your origin\"/>\n                <AirportSelector name=\"herAirport\" value={this.state.herAirport} onChange={this.handleChange} placeholder=\"Their origin\"/>\n                <input type=\"submit\" value=\"Submit\" onClick={this.doStuff}/>\n            </form>\n        );\n    }\n}\n\nasync function startLoading() {\n    $(\"#loading\").show();\n}\n\nasync function endLoading() {\n    $(\"#loading\").hide();\n}\n\nfunction formatKiwiDate(date) {\n    return date.split('-').reverse().join('/');\n}\n\nasync function getFaresFromAirport(airport, fares, departureDateFrom, departureDateTo, returnDateFrom, returnDateTo) {\n    const fareURL = flightsTemplate.replace(\n        '<airport>', airport\n    ).replace(\n        '<outDateFrom>', formatKiwiDate(departureDateFrom)\n    ).replace(\n        '<outDateTo>', formatKiwiDate(departureDateTo)\n    ).replace(\n        '<inDateFrom>', formatKiwiDate(returnDateFrom)\n    ).replace(\n        '<inDateTo>', formatKiwiDate(returnDateTo)\n    );\n    await $.getJSON(\n        fareURL,\n        function(result) {\n            (result.data || []).forEach(function(fare) {\n                fares.push(fare);\n            });\n        }\n    );\n}\n\nasync function getFares(myAirport, herAirport, maxDiffHours, candidates, departureDateFrom, departureDateTo, returnDateFrom, returnDateTo) {\n    var maybeAdd = function(myFare, herFare) {\n        const myArrival = new Date(myFare.route[0].local_arrival);\n        const herArrival = new Date(herFare.route[0].local_arrival);\n        const myReturn = new Date(myFare.route[myFare.route.length - 1].local_arrival);\n        const herReturn = new Date(herFare.route[herFare.route.length - 1].local_arrival);\n        const arrivalDiff = Math.abs(myArrival - herArrival);\n        const returnDiff = Math.abs(myReturn - herReturn);\n        const msTogether = Math.min(myReturn, herReturn) - Math.max(myArrival, herArrival);\n        const msApart = arrivalDiff + returnDiff;\n        if(arrivalDiff + returnDiff > maxDiffHours * 60 * 60 * 1000) return;\n        if(myFare.cityCodeTo !== herFare.cityCodeTo) return;\n        if(msTogether < 24 * 60 * 60 * 1000) return;\n        if(msTogether <= msApart) return;\n        candidates.push({\n            day: myFare.route[0].local_departure,\n            destination: myFare.cityTo + ', ' + myFare.countryTo.name,\n            myArrivalDate: myFare.route[0].local_arrival,\n            herArrivalDate: herFare.route[0].local_arrival,\n            myReturnDate: myFare.route[myFare.route.length - 1].local_arrival,\n            herReturnDate: herFare.route[herFare.route.length - 1].local_arrival,\n            myDepartureDate: myFare.route[0].local_departure,\n            herDepartureDate: herFare.route[0].local_departure,\n            myReturnDate: myFare.route[myFare.route.length - 1].local_departure,\n            herReturnDate: herFare.route[herFare.route.length - 1].local_departure,\n            price: myFare.price + herFare.price,\n            timeApart: moment.duration(msApart),\n            timeTogether: moment.duration(msTogether),\n            myLink: myFare.deep_link,\n            herLink: herFare.deep_link\n        });\n    };\n\n    const myFares = [];\n    const herFares = [];\n    await getFaresFromAirport(myAirport, myFares, departureDateFrom, departureDateTo, returnDateFrom, returnDateTo);\n    await getFaresFromAirport(herAirport, herFares, departureDateFrom, departureDateTo, returnDateFrom, returnDateTo);\n    myFares.forEach(\n        function(myFare) {\n            herFares.forEach(\n                function(herFare){\n                    maybeAdd(myFare, herFare);\n                }\n            );\n        }\n    );\n}\n\nfunction parseDuration(s) {\n    const parts = s.split(' ');\n    const numberPart = parts[0] === 'a' || parts[0] === 'an' ? 1 : parseInt(parts[0]);\n    const unitPart =  parts[1][parts[1].length -1] === 's' ? parts[1] : parts[1] + 's';\n    return moment.duration(numberPart, unitPart);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}