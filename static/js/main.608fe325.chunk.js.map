{"version":3,"sources":["flightsearch.js","cachedFetch.js","AirportSelector.js","Form.js","ResultsTable.js","App.js","index.js"],"names":["formatKiwiDate","date","moment","format","addDays","days","result","Date","setDate","getDate","getFaresFromAirport","throttle","airport","state","a","async","dateFlexibility","dateFrom","departureDate","dateTo","returnFrom","returnDate","returnTo","fareURL","buildUrl","path","queryParams","fly_from","id","curr","ret_from_diff_airport","fly_to","destination","undefined","max_stopovers","replace","fetch","json","flights","data","arrayToDict","map","forEach","flight","getKey","push","cityCodeTo","getCandidates","yourFares","theirFares","candidates","Object","keys","yourOrigin","theirOrigin","yourFaresDict","theirFaresDict","yourFaresToDestination","yourFaresToDestinationDict","newCandidates","theirFaresToDestination","theirFaresToDestinationDict","getFares","cachedFetch","url","expiry","cachedString","localStorage","getItem","cached","JSON","parse","now","removeItem","fetched","setItem","stringify","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","getURL","locationSearch","term","locations","location","assign","AirportSelector","props","classes","React","useState","inputValue","setInputValue","options","setOptions","handleSearch","event","value","target","ourFetch","useMemo","input","callback","useEffect","active","results","Autocomplete","style","width","getOptionLabel","option","name","filterOptions","x","onChange","renderInput","params","TextField","required","label","variant","fullWidth","renderOption","parts","match","Grid","container","alignItems","item","className","xs","part","index","key","fontWeight","highlight","Typography","nextThursday","add","isoWeekday","requiredParams","fillDefault","whichAirport","locationJson","filter","Form","allowSubmit","doStuff","handleChange","e","this","setState","query","bind","startLoading","finishLoading","handleSubmit","setDepartureDate","prevProps","prevState","snapshot","oldMatch","newMatch","setAirport","which","newState","preventDefault","reduce","tot","par","loading","newDate","clearCandidates","setQuery","toDate","fares","addCandidates","onSubmit","sm","md","xl","utils","MomentUtils","DatePicker","disablePast","inputVariant","d","minDate","Button","disabled","onClick","Component","ResultsTable","indexOf","expand","Paper","Tabs","newValue","theirFlight","yourFlight","values","candidate","myFirst","price","minPrice","cityTo","countryTo","Tab","Expanded","setYourFlight","setTheirFlight","Selected","Math","min","fare","formatTime","time","addYoursOrTheirs","yoursOrTheirs","sort","y","sign","data_param","type","role","p","selection","returnLeg","route","length","there","flyFrom","flyTo","local_departure","local_arrival","back","tooltip","colors","theirs","yours","color1","color2","utc_departure","utc_arrival","fareToDatum","flat","chartEvents","eventName","chartSelection","chartWrapper","getChart","getSelection","selectedFareID","row","selectedFare","console","error","height","chartType","loader","timeline","colorByRowLabel","groupByRowLabel","showRowLabels","isHtml","rootProps","c","Flight","Card","CardHeader","title","cityFrom","leg","Avatar","src","airline","CardContent","CardActions","Link","rel","href","deep_link","Loading","window","updateLocale","week","dow","App","useQueryParams","StringParam","DateParam","NumberParam","setLoading","setCandidates","routing","ReactRouterRoute","Route","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.608fe325.chunk.js","sourcesContent":["import throttle from 'lodash/throttle';\nimport buildUrl from 'build-url';\nimport moment from \"moment\";\n\nfunction formatKiwiDate(date) {\n    return moment(date).format('DD/MM/YYYY');\n}\n\nfunction addDays(date, days) {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\nconst getFaresFromAirport = throttle(\n    async function (airport, state) {\n        const dateFlexibility = state.dateFlexibility || 0;\n        const dateFrom = addDays(state.departureDate, -dateFlexibility);\n        const dateTo = addDays(state.departureDate, dateFlexibility);\n        const returnFrom = addDays(state.returnDate, -dateFlexibility);\n        const returnTo = addDays(state.returnDate, dateFlexibility);\n        const fareURL = buildUrl(\n            'https://kiwiproxy.herokuapp.com',\n            {\n                path: \"v2/search\",\n                queryParams: {\n                    fly_from: airport.id,\n                    dateFrom: formatKiwiDate(dateFrom),\n                    dateTo: formatKiwiDate(dateTo),\n                    returnFrom: formatKiwiDate(returnFrom),\n                    returnTo: formatKiwiDate(returnTo),\n                    curr: 'EUR',\n                    ret_from_diff_airport: 0,\n                    fly_to: state.destination ? state.destination.id : undefined,\n                    max_stopovers: state.max_stopovers || 0\n                }\n            }\n        ).replace(/%2F/g, '/');\n        const flights = (await (await fetch(fareURL)).json()).data;\n        return flights;\n    },\n    200\n);\n\nfunction arrayToDict(flights, map = {}) {\n    flights.forEach(\n        (flight) => {\n            if(getKey(flight) in map) map[getKey(flight)].push(flight);\n            else map[getKey(flight)] = [flight];\n            return map;\n        },\n        {}\n    );\n    return map;\n}\n\nfunction getKey(flight) {\n    return flight.cityCodeTo;\n}\n\nfunction getCandidates({yourFares, theirFares}) {\n    const candidates = {};\n    for(const destination of Object.keys(theirFares)) {\n        if(destination in yourFares);\n        else continue;\n        candidates[destination] = {\n            yourFares: yourFares[destination],\n            theirFares: theirFares[destination]\n        }\n    }\n    return candidates;\n}\n\nasync function* getFares(state) {\n    const yourFares = await getFaresFromAirport(state.yourOrigin, state);\n    const theirFares = await getFaresFromAirport(state.theirOrigin, state);\n    const yourFaresDict = arrayToDict(yourFares);\n    const theirFaresDict = arrayToDict(theirFares);\n    yield getCandidates({yourFares: yourFaresDict, theirFares:theirFaresDict});\n    for(const destination of Object.keys(theirFaresDict)) {\n        if(destination in yourFaresDict) continue;\n        const yourFaresToDestination = await getFaresFromAirport(\n            state.yourOrigin,\n            {...state, destination: {id: destination}}\n        );\n        const yourFaresToDestinationDict = arrayToDict(yourFaresToDestination);\n        const newCandidates = getCandidates({yourFares: yourFaresToDestinationDict, theirFares: theirFaresDict});\n        yield newCandidates;\n        // todo: add to dict\n    }\n    for(const destination of Object.keys(yourFaresDict)) {\n        if(destination in theirFaresDict) continue;\n        const theirFaresToDestination = await getFaresFromAirport(\n            state.theirOrigin,\n            {...state, destination: {id: destination}}\n        );\n        const theirFaresToDestinationDict = arrayToDict(theirFaresToDestination);\n        const newCandidates = getCandidates({yourFares: yourFaresDict, theirFares: theirFaresToDestinationDict});\n        yield newCandidates;\n        // todo: add to dict\n    }\n}\n\nexport default getFares;\n","export default async function cachedFetch({url, expiry}) {\n    const cachedString = localStorage.getItem(url);\n    if(cachedString) {\n        const cached = JSON.parse(cachedString);\n        if(cached.expiry < Date.now()) localStorage.removeItem(url);\n        else return cached.data;\n    }\n    const fetched = await fetch(url);\n    const data = await fetched.json();\n    localStorage.setItem(\n        url,\n        JSON.stringify({data: data, expiry: expiry})\n    );\n    return data;\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport throttle from 'lodash/throttle';\nimport cachedFetch from \"./cachedFetch\";\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nconst getURL = async (url) => await cachedFetch({\n    url: url,\n    expiry: new Date(new Date() + 1000 * 60 * 60 * 24 * 7)\n});\n\nasync function locationSearch({term, id}) {\n    const url = 'https://kiwiproxy.herokuapp.com/locations/' + (id ? `id?id=${id}` : `/query?&term=${term}`);\n    const locations = await getURL(url);\n    return locations.locations.map(location => Object.assign(location, {'input': term || id}))\n}\n\nexport default function AirportSelector(props) {\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n\n    const handleSearch = (event, value) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleChange = (event, value) => {\n        props.onChange({\n            target:{\n                name: props.name,\n                value: value\n            }\n        });\n    }\n\n    const ourFetch = React.useMemo(\n        () => throttle(\n            async function(input, callback) {\n                const locations = await locationSearch({term: input});\n                callback(locations);\n            },\n            200\n        ),\n        [],\n    );\n\n    React.useEffect(\n        () => {\n            let active = true;\n            if (inputValue === '') {\n                setOptions([]);\n                return undefined;\n            }\n            ourFetch(\n                inputValue,\n                results => {\n                    if (active) {\n                        setOptions(results || []);\n                    }\n                }\n            );\n\n            return () => {\n                active = false;\n            };\n        },\n        [inputValue, ourFetch]\n    );\n\n    return (\n        <Autocomplete\n            style={{ width: \"240px\" }}\n            getOptionLabel={option => (typeof option === 'string' ? option : option.name)}\n            filterOptions={x => x}\n            options={options}\n            onChange={handleChange}\n            value={props.value}\n            renderInput={params => (\n                <TextField\n                    required={props.required}\n                    {...params}\n                    label={props.label}\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={handleSearch}\n                />\n            )}\n            renderOption={option => {\n                const parts = parse(\n                    option.name,\n                    match(option.name, option.input)\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                    {part.text}\n                                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.name}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n","import getFares from './flightsearch.js';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport AirportSelector from './AirportSelector.js';\n\n\nfunction nextThursday() {\n    return moment().add((moment().isoWeekday() >= 4  ? 12 : 4) - moment().isoWeekday(), 'days');\n}\n\nconst requiredParams = ['departureDate', 'returnDate', 'yourOrigin', 'theirOrigin'];\n\nasync function fillDefault(whichAirport, state) {\n    if(state[whichAirport]) {\n        const url = `https://kiwiproxy.herokuapp.com/locations/id?id=${state[whichAirport]}`;\n        const locationJson = await fetch(url);\n        const locations = await locationJson.json();\n        state[whichAirport] = locations.locations.filter(\n            x => x.id === state[whichAirport]\n        )[0];\n    }\n}\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureDate: nextThursday(),\n            returnDate: nextThursday().add(4, 'days'),\n            destination: \"\",\n            ...props.query\n        };\n        \n        this.state.departureDate = moment(this.state.departureDate);\n        this.state.returnDate = moment(this.state.returnDate);\n        this.allowSubmit = this.allowSubmit.bind(this);\n        this.startLoading = props.startLoading;\n        this.finishLoading = props.finishLoading;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.doStuff = this.doStuff.bind(this);\n        //this.componentDidUpdate = this.componentDidUpdate.bind(this);\n        this.setDepartureDate = this.setDepartureDate.bind(this);\n        async function fillDefaults(state, allowSubmit, doStuff) {\n            await fillDefault('yourOrigin', state);\n            await fillDefault('theirOrigin', state);\n            await fillDefault('destination', state);\n            if (allowSubmit()) doStuff();\n        }\n        fillDefaults(this.state, this.allowSubmit, this.doStuff);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const setState = this.setState.bind(this)\n        const oldMatch = prevProps.query;\n        const newMatch = this.props.query;\n        if(newMatch.returnDate !== oldMatch.returnDate) {\n            this.setState({returnDate: moment(newMatch.returnDate)});\n        }\n        if(newMatch.dateFlexibility !== oldMatch.dateFlexibility) {\n            this.setState({dateFlexibility: newMatch.dateFlexibility});\n        }\n        \n        if(newMatch.max_stopovers !== oldMatch.max_stopovers) {\n            this.setState({max_stopovers: newMatch.max_stopovers});\n        }\n        if(newMatch.departureDate !== oldMatch.departureDate) this.setDepartureDate(newMatch.departureDate);\n        async function setAirport(which)  {\n            if(newMatch[which] !== oldMatch[which]) {\n                const newState = {};\n                newState[which] = newMatch[which];\n                await fillDefault(which, newState);\n                setState(newState);\n            }\n        }\n        setAirport('yourOrigin');\n        setAirport('theirOrigin');\n        setAirport('destination');\n    }\n    \n    handleChange = function(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    allowSubmit() {\n        return requiredParams.reduce(\n            (tot, par) => tot && !!this.state[par],\n            true\n        ) && !this.props.loading;\n    }\n\n    setDepartureDate(newDate) {\n        if(newDate > this.state.returnDate) {\n            this.setState({\n                returnDate: moment(this.state.returnDate + (newDate - this.state.departureDate))\n            });\n        }\n        this.setState({departureDate: moment(newDate)});\n    }\n\n    async doStuff() {\n        this.startLoading();\n        this.props.clearCandidates();\n        this.props.setQuery({\n            yourOrigin: this.state.yourOrigin.id,\n            theirOrigin: this.state.theirOrigin.id,\n            destination: this.state.destination ? this.state.destination.id : undefined,\n            departureDate: this.state.departureDate.toDate(),\n            returnDate: this.state.returnDate.toDate()\n        });\n        for await (const fares of await getFares(this.state)) this.props.addCandidates(fares);\n        this.finishLoading();\n    }\n\n    renderInput = input => input.name;\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <Grid container spacing={2}>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"departureDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                disablePast\n                                variant=\"inline\"\n                                label=\"Departure\"\n                                value={this.state.departureDate}\n                                inputVariant=\"outlined\"\n                                onChange={this.setDepartureDate}\n                            />\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"returnDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                variant=\"inline\"\n                                label=\"Return\"\n                                value={this.state.returnDate}\n                                inputVariant=\"outlined\"\n                                onChange={d => this.setState({returnDate: d})}\n                                minDate={this.state.departureDate}\n                            />\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"yourOrigin\"\n                            name=\"yourOrigin\"\n                            value={this.state.yourOrigin}\n                            onChange={this.handleChange}\n                            label=\"Your origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"theirOrigin\"\n                            name=\"theirOrigin\"\n                            value={this.state.theirOrigin}\n                            onChange={this.handleChange}\n                            label=\"Their origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            id=\"destination\"\n                            name=\"destination\"\n                            value={this.state.destination}\n                            onChange={this.handleChange}\n                            label=\"Destination\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <Button variant=\"contained\" color=\"primary\" disabled={!this.allowSubmit()} onClick={this.doStuff}>Search</Button>\n                    </Grid>\n                </Grid>\n                \n            </form>\n        );\n    }\n}\n\nexport default Form\n","import moment from \"moment\";\nimport { Chart } from \"react-google-charts\";\nimport React from 'react';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from '@material-ui/core/CardActions';\nimport {\n    Grid,\n    Link,\n    Tabs,\n    Tab,\n    Paper,\n    Card,\n    CardContent,\n    Avatar\n} from '@material-ui/core';\n\nexport default function ResultsTable(props) {\n    const setDestination = (event, newValue) => {\n        props.setQuery({expand: newValue, theirFlight: null, yourFlight: null});\n    };\n    const setYourFlight = (newValue) => props.setQuery({yourFlight: newValue});\n    const setTheirFlight = (newValue) => props.setQuery({theirFlight: newValue});\n    const airports = Object.keys(props.candidates);\n    const value = airports.indexOf(props.query.expand) !== -1 ? props.query.expand : false;\n    return (\n        <Paper>\n            <Tabs value={value} onChange={setDestination}>\n                {Object.values(props.candidates).map(\n                    candidate => {\n                        const myFirst = candidate.yourFares[0];\n                        const price = minPrice(candidate.yourFares) + minPrice(candidate.theirFares);\n                        const label = `€ ${price} ${myFirst.cityTo}, ${myFirst.countryTo.name}`;\n                        return <Tab key={myFirst.cityCodeTo} value={myFirst.cityCodeTo} label={label}/>;\n                    }\n                )\n                }\n            </Tabs>\n            <Expanded\n                cityCodeTo={props.query.expand}\n                yourFlight={props.query.yourFlight}\n                theirFlight={props.query.theirFlight}\n                candidates={props.candidates}\n                setYourFlight={setYourFlight}\n                setTheirFlight={setTheirFlight}\n            />\n            <Selected\n                yourFlight={props.query.yourFlight}\n                theirFlight={props.query.theirFlight}\n                flights={props.candidates[props.query.expand]}\n            />\n        </Paper>\n    )\n}\n\nfunction minPrice(fares) {\n    return Math.min(...(fares.map(fare => fare.price)));\n}\n\nfunction formatTime(time) {\n    return moment(time).format('DD MMM HH:mm');\n}\n\nfunction fareToDatum({fare, yourFlight, theirFlight}) {\n    const selection = yourFlight || theirFlight;\n    if(yourFlight && fare.yoursOrTheirs === 'yours' && fare.id !== yourFlight) return null;\n    if(theirFlight && fare.yoursOrTheirs === 'theirs' && fare.id !== theirFlight) return null;\n    const returnLeg = fare.route[fare.route.length - 1];\n    const price = `€ ${fare.price}`\n    const there = `${fare.flyFrom} -> ${fare.flyTo} ${formatTime(fare.local_departure)} – ${formatTime(fare.local_arrival)}`;\n    const back = `${returnLeg.flyFrom} -> ${returnLeg.flyTo} ${formatTime(returnLeg.local_departure)} – ${formatTime(returnLeg.local_arrival)}`;\n    const label = `${price} | ${there} | ${back}`;\n    const tooltip = `${price}<br/>${there}<br/>${back}`;\n    const colors = {\n        theirs: ['#DC3912', '#FFAAAA'],\n        yours: ['#3366CC', '#88AAFF']\n    }[fare.yoursOrTheirs];\n    const color1 = fare.id === selection ? colors[1] : colors[0];\n    const color2 = fare.id === selection ? colors[0] : colors[1];\n    return [\n        [\n            fare.id,\n            '',\n            `color: ${color1};`,\n            tooltip,\n            new Date(fare.utc_departure),\n            new Date(fare.utc_arrival)\n        ],\n        [\n            fare.id,\n            label,\n            `color: ${color2};`,\n            tooltip,\n            new Date(fare.utc_arrival),\n            new Date(returnLeg.utc_departure)\n        ],\n        [\n            fare.id,\n            '',\n            `color: ${color1};`,\n            tooltip,\n            new Date(returnLeg.utc_departure),\n            new Date(returnLeg.utc_arrival)\n        ]\n    ];\n}\n\nfunction addYoursOrTheirs(fares, yoursOrTheirs) {\n    return fares.map(x => {\n        return {...x, ...{yoursOrTheirs: yoursOrTheirs}}\n    });\n}\n\nfunction Expanded({cityCodeTo, candidates, yourFlight, theirFlight, setYourFlight, setTheirFlight}) {\n    if(yourFlight && theirFlight) return null;\n    if(cityCodeTo in candidates);\n    else return null;\n    const fares = [\n        ...addYoursOrTheirs(candidates[cityCodeTo].yourFares, 'yours'),\n        ...addYoursOrTheirs(candidates[cityCodeTo].theirFares, 'theirs'),\n    ];\n    fares.sort((x, y) => {\n        if(x.id === theirFlight || x.id === yourFlight) return -1;\n        if(y.id === theirFlight || y.id === yourFlight) return 1;\n        return Math.sign(x.price - y.price);\n    });\n\n    const data_param = [\n        [\n            { type: 'string', id: 'id' },\n            { type: 'string', id: 'label' },\n            { type: 'string', role: 'style' },\n            { type: 'string', role: 'tooltip', p: {'html': true}},\n            { type: 'date', id: 'Start' },\n            { type: 'date', id: 'End' }\n        ],\n        ...fares.map(\n            fare => fareToDatum({fare:fare, yourFlight: yourFlight, theirFlight: theirFlight})\n        ).filter(x => x).flat()\n    ];\n    const chartEvents=[\n      {\n        eventName: 'select',\n        callback: function({chartWrapper}) {\n            const chartSelection = chartWrapper.getChart().getSelection();\n            const selectedFareID = data_param[chartSelection[0].row][0];\n            const selectedFare = fares.filter(x => x.id === selectedFareID)[0];\n            if(selectedFare.yoursOrTheirs === 'yours') {\n                if(selectedFare.id === yourFlight) setYourFlight('');\n                else setYourFlight(selectedFare.id);\n            }\n            else if(selectedFare.yoursOrTheirs === 'theirs') {\n                if(selectedFare.id === theirFlight) setTheirFlight('');\n                else setTheirFlight(selectedFare.id);\n            }\n            else console.error('unexpected yoursOrTheirs', selectedFare.yoursOrTheirs);\n        }\n      }\n    ];\n\n    return (\n        <Chart\n            width={'100%'}\n            height={yourFlight && theirFlight ? '200px' : '800px'}\n            chartType=\"Timeline\"\n            loader={<div>Loading Chart</div>}\n            data={data_param}\n            chartEvents={chartEvents} // <- this is event handler\n            options={{\n                timeline: {\n                    colorByRowLabel: false,\n                    groupByRowLabel: true,\n                    showRowLabels: false\n                },\n                tooltip: {\n                    isHtml: true\n                }\n\n            }}\n            rootProps={{ 'data-testid': '1' }}\n        />\n    );\n}\n\nfunction Selected({yourFlight, theirFlight, flights}) {\n    if(!flights) return null;\n    const theirs = theirFlight && flights.theirFares.filter(c => c.id === theirFlight)[0];\n    const yours = yourFlight && flights.yourFares.filter(c => c.id === yourFlight)[0];\n    if(!theirs && !yours) return null;\n    return <Paper>\n        <Grid container spacing={10}>\n            {theirs && <Flight flight={theirs}/>}\n            {yours && <Flight flight={yours}/>}\n        </Grid>\n    </Paper>\n}\n\nfunction Flight({flight}) {\n    return <Grid item>\n        <Card>\n            <CardHeader title={`${flight.cityFrom} -> ${flight.cityTo}`}/>\n            {flight.route.map(\n                leg => {\n                    return <div key={leg.id}>\n                        <Avatar src={`https://images.kiwi.com/airlines/64/${leg.airline}.png`}/>\n                        <CardContent>\n                            {formatTime(leg.local_departure)} {leg.cityFrom} ({leg.flyFrom})\n                            <br/>\n                            {formatTime(leg.local_arrival)} {leg.cityTo} ({leg.flyTo})\n                        </CardContent>\n                    </div>\n                }\n            )}\n            <CardActions>\n                <Link target=\"_blank\" rel=\"noopener\" href={flight.deep_link}>€ {flight.price}</Link>\n            </CardActions>\n        </Card>\n    </Grid>\n}\n","import moment from \"moment\";\nimport React from 'react';\nimport './App.css';\nimport Form from './Form.js';\nimport ResultsTable from './ResultsTable.js';\nimport {\n  useQueryParams,\n  StringParam,\n  DateParam,\n  NumberParam,\n} from 'use-query-params';\n\n// for tabulator\nwindow.moment = moment;\nmoment.updateLocale('en', {\n    week: {\n      dow: 1,\n    },\n});\n\nfunction App(props) {\n    const [query, setQuery] = useQueryParams({\n        destination: StringParam,\n        theirOrigin: StringParam,\n        yourOrigin: StringParam,\n        departureDate: DateParam,\n        returnDate: DateParam,\n        dateFlexibility: NumberParam,\n        max_stopovers: NumberParam,\n        expand: StringParam,\n        yourFlight: StringParam,\n        theirFlight: StringParam,\n    });\n    const [loading, setLoading] = React.useState(0);\n    const [candidates, setCandidates] = React.useState({});\n    const startLoading = () => setLoading(loading + 1);\n    const finishLoading = () => setLoading(loading - 1);\n    const addCandidates = (newCandidates) => setCandidates({...candidates, ...newCandidates});\n    const clearCandidates = () => setCandidates([]);\n    return (\n        <div>\n            <Form\n                addCandidates={addCandidates}\n                clearCandidates={clearCandidates}\n                startLoading={startLoading}\n                finishLoading={finishLoading}\n                loading={loading > 0}\n                query={query}\n                setQuery={setQuery}\n            />\n            <Loading id=\"loading\" loading={loading > 0}/>\n            <ResultsTable candidates={candidates} setQuery={setQuery} query={query}/>\n        </div>\n  );\n}\n\nfunction Loading(props) {\n    return <div id={props.id}>{props.loading ? '✈' : ''}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Route, HashRouter as Router } from 'react-router-dom'\nimport { QueryParamProvider } from 'use-query-params';\nimport App from './App'\n\nconst routing = (\n<Router>\n    <QueryParamProvider ReactRouterRoute={Route}>\n        <App />\n    </QueryParamProvider>\n</Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n"],"sourceRoot":""}