{"version":3,"sources":["logo.svg","AirportSelector.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","AirportSelector","props","classes","React","useState","inputValue","setInputValue","options","setOptions","loaded","useRef","label","current","handleSearch","event","value","target","ourFetch","useMemo","throttle","input","callback","a","async","fetch","locationJson","json","locations","map","location","Object","assign","useEffect","active","results","Autocomplete","style","width","getOptionLabel","option","name","filterOptions","x","defaultvalue","onChange","renderInput","params","TextField","variant","fullWidth","autoHighlight","renderOption","parts","parse","match","Grid","container","alignItems","item","className","xs","part","index","key","fontWeight","highlight","Typography","window","moment","updateLocale","week","dow","candidates","App","columns","title","field","formatter","formatterParams","symbol","precision","headerFilter","headerFilterFunc","headerValue","rowValue","align","outputFormat","cell","onRendered","getValue","humanize","parseDuration","id","data","height","layout","reactiveData","daysInTheFuture","howMany","futureDate","Date","setDate","getDate","Form","handleChange","e","this","setState","state","departureDateFrom","departureDateTo","returnDateFrom","returnDateTo","myAirport","code","herAirport","destinationAirport","bind","handleSubmit","doStuff","preventDefault","$","show","getFares","hide","onSubmit","sm","md","xl","utils","MomentUtils","DatePicker","datepicker","inputVariant","d","Button","onClick","Component","formatKiwiDate","date","format","getFaresFromAirport","airport","fares","fareURL","buildUrl","path","queryParams","fly_from","dateFrom","dateTo","returnFrom","returnTo","curr","ret_from_diff_airport","fly_to","max_stopovers","replace","getJSON","result","forEach","fare","push","maybeAdd","myFare","herFare","myArrival","route","local_arrival","herArrival","myReturn","length","herReturn","arrivalDiff","Math","abs","returnDiff","msTogether","min","max","msApart","maxDiffHours","cityCodeTo","day","local_departure","destination","cityTo","countryTo","myArrivalDate","herArrivalDate","myReturnDate","herReturnDate","myDepartureDate","herDepartureDate","price","timeApart","duration","timeTogether","myLink","deep_link","herLink","myFares","herFares","s","split","numberPart","parseInt","unitPart","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.574f5800.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7f2c5d69.svg\";","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport throttle from 'lodash/throttle';\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport default function AirportSelector(props) {\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n    const loaded = React.useRef(false);\n    const label = props.label;\n    loaded.current = true;\n\n    const handleSearch = (event, value) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleChange = (event, value) => {\n        props.onChange({\n            target:{\n                name: props.name,\n                value: value\n            }\n        });\n    }\n\n    const ourFetch = React.useMemo(\n        () =>\n            throttle(\n                async function(input, callback) {\n                    const locationJson = await fetch('https://kiwiproxy.herokuapp.com//locations/query?term=' + input.input);\n                    const locations = await locationJson.json();\n                    callback(locations.locations.map(location => Object.assign(location, {'input': input.input})));\n                },\n                200\n            ),\n        [],\n    );\n\n    React.useEffect(() => {\n        let active = true;\n\n        if (inputValue === '') {\n            setOptions([]); \n            return undefined;\n        }\n\n        ourFetch({ input: inputValue }, results => {\n            if (active) {\n                setOptions(results || []);\n            }\n        });\n\n        return () => {\n            active = false;\n        };\n    }, [inputValue, ourFetch]);\n\n    return (\n        <Autocomplete\n            style={{ width: \"240px\" }}\n            getOptionLabel={option => (typeof option === 'string' ? option : option.name)}\n            filterOptions={x => x}\n            options={options}\n            defaultvalue={options.value}\n            onChange={handleChange}\n            renderInput={params => (\n                <TextField\n                    {...params}\n                    label={label}\n                    variant=\"outlined\"\n                    fullWidth\n                    autoHighlight={true}\n                    onChange={handleSearch}\n                />\n            )}\n            renderOption={option => {\n                const parts = parse(\n                    option.name,\n                    match(option.name, option.input)\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                    {part.text}\n                                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.name}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n","import buildUrl from 'build-url';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from \"moment\";\nimport $ from \"jquery\";\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport 'react-tabulator/lib/styles.css';\nimport 'react-tabulator/lib/css/tabulator.min.css';\nimport { ReactTabulator } from 'react-tabulator';\nimport logo from './logo.svg';\nimport './App.css';\nimport AirportSelector from './AirportSelector.js';\n\n// for tabulator\nwindow.moment = moment;\nmoment.updateLocale('en', {\n  week: {\n    dow: 1,\n  },\n})\n\nconst candidates = [];\n\nfunction App() {\n    const columns = [\n        {\n            title: \"Price\",\n            field: \"price\",\n            formatter: \"money\",\n            formatterParams: {\n                symbol: \"€\",\n                precision: 0\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => headerValue >= rowValue,\n        },\n        {\n            title: \"Destination\",\n            field: \"destination\",\n            headerFilter: true\n        },\n        {\n            title: \"You\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"myArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"myReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"myLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Them\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"herArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"herReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"herLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Together\",\n            field: \"timeTogether\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) <= rowValue,\n        },\n        {\n            title: \"Apart\",\n            field: \"timeApart\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) >= rowValue,\n        },\n    ];\n    return (\n        <div>\n            <Form />\n             <div id=\"loading\">✈</div>\n            <ReactTabulator\n                data={candidates}\n                columns={columns}\n                options={{\n                    height:\"100%\",\n                    layout:\"fitColumns\",\n                    reactiveData:true,\n                }}\n            />\n        </div>\n  );\n}\n\nexport default App;\n\nfunction daysInTheFuture(howMany) {\n    var futureDate = new Date();\n    return moment(futureDate.setDate(futureDate.getDate() + howMany));\n    return futureDate.toISOString().split('T')[0];\n}\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureDateFrom: daysInTheFuture(5),\n            departureDateTo: daysInTheFuture(6),\n            returnDateFrom: daysInTheFuture(9),\n            returnDateTo: daysInTheFuture(10),\n            myAirport: {code:\"MLA\", name:\"Malta\"},\n            herAirport: {code:\"FRA\", name:\"Frankfurt\"},\n            destinationAirport: {}\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.doStuff = this.doStuff.bind(this);\n    }\n\n    handleChange = function(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    async doStuff() {\n        await startLoading();\n        await getFares(this.state);\n        endLoading();\n    }\n\n    renderInput = input => input.name;\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <Grid container spacing={2}>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"departureDateFrom\" utils={MomentUtils}>\n                            <DatePicker variant=\"inline\" datepicker label=\"Departure from\" value={this.state.departureDateFrom} inputVariant=\"outlined\" onChange={d => this.setState({departureDateFrom: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"departureDateTo\" utils={MomentUtils}>\n                            <DatePicker variant=\"inline\" datepicker label=\"to\" value={this.state.departureDateTo} inputVariant=\"outlined\" onChange={d => this.setState({departureDateTo: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"returnDateFrom\" utils={MomentUtils}>\n                            <DatePicker variant=\"inline\" datepicker label=\"Return from\" value={this.state.returnDateFrom} inputVariant=\"outlined\" onChange={d => this.setState({returnDateFrom: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"returnDateTo\" utils={MomentUtils}>\n                            <DatePicker variant=\"inline\" datepicker label=\"to\" value={this.state.returnDateTo} inputVariant=\"outlined\" onChange={d => this.setState({returnDateTo: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            id=\"myAirport\"\n                            name=\"myAirport\"\n                            value={this.state.myAirport}\n                            onChange={this.handleChange}\n                            label=\"Your origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            id=\"herAirport\"\n                            name=\"herAirport\"\n                            value={this.state.herAirport}\n                            onChange={this.handleChange}\n                            label=\"Their origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            id=\"destinationAirport\"\n                            name=\"destinationAirport\"\n                            value={this.state.destinationAirport}\n                            onChange={this.handleChange}\n                            label=\"Destination\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.doStuff}>Search</Button>\n                    </Grid>\n                </Grid>\n                \n            </form>\n        );\n    }\n}\n\nasync function startLoading() {\n    $(\"#loading\").show();\n}\n\nasync function endLoading() {\n    $(\"#loading\").hide();\n}\n\nfunction formatKiwiDate(date) {\n    return date.format('DD/MM/YYYY');\n}\n\nasync function getFaresFromAirport(airport, state) {\n    const fares = [];\n    const fareURL = buildUrl(\n        'https://kiwiproxy.herokuapp.com',\n        {\n            path: \"v2/search\",\n            queryParams: {\n                fly_from: airport.code,\n                dateFrom: formatKiwiDate(state.departureDateFrom),\n                dateTo: formatKiwiDate(state.departureDateTo),\n                returnFrom: formatKiwiDate(state.returnDateFrom),\n                returnTo: formatKiwiDate(state.returnDateTo),\n                curr: 'EUR',\n                ret_from_diff_airport: 0,\n                fly_to: state.destinationAirport.code,\n                max_stopovers: 0\n            }\n        }\n    ).replace(/%2F/g, '/');\n    await $.getJSON(\n        fareURL,\n        function(result) {\n            (result.data || []).forEach(function(fare) {\n                fares.push(fare);\n            });\n        }\n    );\n    return fares;\n}\n\nasync function getFares(state) {\n    var maybeAdd = function(myFare, herFare) {\n        const maxDiffHours = 36;\n        const myArrival = new Date(myFare.route[0].local_arrival);\n        const herArrival = new Date(herFare.route[0].local_arrival);\n        const myReturn = new Date(myFare.route[myFare.route.length - 1].local_arrival);\n        const herReturn = new Date(herFare.route[herFare.route.length - 1].local_arrival);\n        const arrivalDiff = Math.abs(myArrival - herArrival);\n        const returnDiff = Math.abs(myReturn - herReturn);\n        const msTogether = Math.min(myReturn, herReturn) - Math.max(myArrival, herArrival);\n        const msApart = arrivalDiff + returnDiff;\n        if(arrivalDiff + returnDiff > maxDiffHours * 60 * 60 * 1000) return;\n        if(myFare.cityCodeTo !== herFare.cityCodeTo) return;\n        if(msTogether < 24 * 60 * 60 * 1000) return;\n        if(msTogether <= msApart) return;\n        candidates.push({\n            day: myFare.route[0].local_departure,\n            destination: myFare.cityTo + ', ' + myFare.countryTo.name,\n            myArrivalDate: myFare.route[0].local_arrival,\n            herArrivalDate: herFare.route[0].local_arrival,\n            myReturnDate: myFare.route[myFare.route.length - 1].local_arrival,\n            herReturnDate: herFare.route[herFare.route.length - 1].local_arrival,\n            myDepartureDate: myFare.route[0].local_departure,\n            herDepartureDate: herFare.route[0].local_departure,\n            price: myFare.price + herFare.price,\n            timeApart: moment.duration(msApart),\n            timeTogether: moment.duration(msTogether),\n            myLink: myFare.deep_link,\n            herLink: herFare.deep_link\n        });\n    };\n    const myFares = await getFaresFromAirport(state.myAirport, state);\n    const herFares = await getFaresFromAirport(state.herAirport, state);\n    myFares.forEach(\n        function(myFare) {\n            herFares.forEach(\n                function(herFare){\n                    maybeAdd(myFare, herFare);\n                }\n            );\n        }\n    );\n}\n\nfunction parseDuration(s) {\n    const parts = s.split(' ');\n    const numberPart = parts[0] === 'a' || parts[0] === 'an' ? 1 : parseInt(parts[0]);\n    const unitPart =  parts[1][parts[1].length -1] === 's' ? parts[1] : parts[1] + 's';\n    return moment.duration(numberPart, unitPart);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}