{"version":3,"sources":["flightsearch.js","cachedFetch.js","AirportSelector.js","Form.js","FlightsChart.js","ResultsTabs.js","App.js","index.js"],"names":["formatKiwiDate","date","moment","format","addDays","days","result","Date","setDate","getDate","getFaresFromAirport","throttle","airport","state","a","async","departureDateFlexibility","returnDateFlexibility","dateFrom","departureDate","dateTo","returnFrom","returnDate","returnTo","fareURL","buildUrl","path","queryParams","fly_from","curr","ret_from_diff_airport","fly_to","destination","max_stopovers","max_fly_duration","replace","fetch","json","flights","data","arrayToDict","map","forEach","flight","getKey","push","cityCodeTo","getFlights","yourFares","theirFares","Object","keys","yourOrigin","theirOrigin","yourFaresDict","theirFaresDict","yourFaresToDestination","yourFaresToDestinationDict","newFlights","theirFaresToDestination","theirFaresToDestinationDict","getFares","cachedFetch","url","expiry","cachedString","localStorage","getItem","cached","JSON","parse","now","removeItem","fetched","setItem","stringify","err","clear","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","getURL","locationSearch","term","id","locations","location","assign","AirportSelector","props","classes","React","useState","inputValue","setInputValue","options","setOptions","value","setValue","handleSearch","event","target","ourFetch","useMemo","input","callback","useEffect","active","doStuff","results","Autocomplete","getOptionLabel","option","name","filterOptions","x","onChange","undefined","renderInput","params","TextField","required","label","variant","fullWidth","renderOption","parts","match","Grid","container","alignItems","item","className","xs","part","index","key","style","fontWeight","highlight","Typography","requiredParams","Form","allowSubmit","bind","startLoading","finishLoading","handleSubmit","setSwitchValue","seTextBoxValue","setDepartureDate","preventDefault","reduce","tot","par","query","this","loading","newDate","setQuery","clearFlights","fares","addFlights","console","log","showAdvancedSettings","onSubmit","sm","md","lg","xl","utils","MomentUtils","DatePicker","disablePast","inputVariant","type","d","minDate","Switch","checked","Button","disabled","onClick","Component","addYoursOrTheirs","yoursOrTheirs","formatTime","time","memo","yourFlight","theirFlight","setYourFlight","setTheirFlight","sortBy","yourMaxPrice","theirMaxPrice","sort","y","Math","sign","price","utc_departure","utc_arrival","route","length","itemsAndGroups","filter","fare","maxPrice","yours","theirs","selection","previousLeg","returnLeg","there","flyFrom","flyTo","local_departure","local_arrival","back","tooltip","output","leg","colors","flight_color","gap_color","bars","group","content","title","start","end","items","fareToDatum","flat","groups","idx","order","width","showMajorLabels","showCurrentTime","verticalScroll","zoomable","stack","maxHeight","orientation","axis","minorLabels","minute","hour","Immutable","selectHandler","selectedFareID","split","selectedFare","error","equal","ResultsTabs","newValue","indexOf","expand","Paper","Tabs","scrollButtons","values","myFirst","minPrice","cityTo","countryTo","Tab","FlightSelector","setSortBy","setYourMaxPrice","setTheirMaxPrice","SelectedFlights","min","yourMax","max","theirMax","yourMin","Infinity","theirMin","gutterBottom","Select","MenuItem","Slider","defaultValue","onChangeCommitted","valueLabelDisplay","c","Flight","clearFlight","Card","CardHeader","cityFrom","action","IconButton","aria-label","Avatar","src","airline","CardContent","CardActions","Link","rel","href","deep_link","Loading","App","useQueryParams","StringParam","DateParam","NumberParam","BooleanParam","setLoading","setFlights","routing","ReactRouterRoute","Route","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24c4cd52.chunk.js","sourcesContent":["import throttle from 'lodash/throttle';\nimport buildUrl from 'build-url';\nimport moment from \"moment\";\n\nfunction formatKiwiDate(date) {\n    return moment(date).format('DD/MM/YYYY');\n}\n\nfunction addDays(date, days) {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\nconst getFaresFromAirport = throttle(\n    async function (airport, state) {\n        const departureDateFlexibility = state.departureDateFlexibility || 0;\n        const returnDateFlexibility = state.returnDateFlexibility || 0;\n        const dateFrom = addDays(state.departureDate, -departureDateFlexibility);\n        const dateTo = addDays(state.departureDate, departureDateFlexibility);\n        const returnFrom = addDays(state.returnDate, -returnDateFlexibility);\n        const returnTo = addDays(state.returnDate, returnDateFlexibility);\n        const fareURL = buildUrl(\n            'https://kiwiproxy.herokuapp.com',\n            {\n                path: \"v2/search\",\n                queryParams: {\n                    fly_from: airport,\n                    dateFrom: formatKiwiDate(dateFrom),\n                    dateTo: formatKiwiDate(dateTo),\n                    returnFrom: formatKiwiDate(returnFrom),\n                    returnTo: formatKiwiDate(returnTo),\n                    curr: 'EUR',\n                    ret_from_diff_airport: 0,\n                    fly_to: state.destination,\n                    max_stopovers: state.max_stopovers || 0,\n                    max_fly_duration: state.max_fly_duration,\n                }\n            }\n        ).replace(/%2F/g, '/');\n        const flights = (await (await fetch(fareURL)).json()).data;\n        return flights;\n    },\n    200\n);\n\nfunction arrayToDict(flights, map = {}) {\n    flights.forEach(\n        (flight) => {\n            if(getKey(flight) in map) map[getKey(flight)].push(flight);\n            else map[getKey(flight)] = [flight];\n            return map;\n        },\n        {}\n    );\n    return map;\n}\n\nfunction getKey(flight) {\n    return flight.cityCodeTo;\n}\n\nfunction getFlights({yourFares, theirFares}) {\n    const flights = {};\n    for(const destination of Object.keys(theirFares)) {\n        if(destination in yourFares);\n        else continue;\n        flights[destination] = {\n            yourFares: yourFares[destination],\n            theirFares: theirFares[destination]\n        }\n    }\n    return flights;\n}\n\nasync function* getFares(state) {\n    const yourFares = await getFaresFromAirport(state.yourOrigin, state);\n    const theirFares = await getFaresFromAirport(state.theirOrigin, state);\n    const yourFaresDict = arrayToDict(yourFares);\n    const theirFaresDict = arrayToDict(theirFares);\n    yield getFlights({yourFares: yourFaresDict, theirFares:theirFaresDict});\n    for(const destination of Object.keys(theirFaresDict)) {\n        if(destination in yourFaresDict) continue;\n        const yourFaresToDestination = await getFaresFromAirport(\n            state.yourOrigin,\n            {...state, destination: destination}\n        );\n        const yourFaresToDestinationDict = arrayToDict(yourFaresToDestination);\n        const newFlights = getFlights({yourFares: yourFaresToDestinationDict, theirFares: theirFaresDict});\n        yield newFlights;\n        // todo: add to dict\n    }\n    for(const destination of Object.keys(yourFaresDict)) {\n        if(destination in theirFaresDict) continue;\n        const theirFaresToDestination = await getFaresFromAirport(\n            state.theirOrigin,\n            {...state, destination: destination}\n        );\n        const theirFaresToDestinationDict = arrayToDict(theirFaresToDestination);\n        const newFlights = getFlights({yourFares: yourFaresDict, theirFares: theirFaresToDestinationDict});\n        yield newFlights;\n        // todo: add to dict\n    }\n}\n\nexport default getFares;\n","export default async function cachedFetch({url, expiry}) {\n    const cachedString = localStorage.getItem(url);\n    if(cachedString) {\n        const cached = JSON.parse(cachedString);\n        if(cached.expiry < Date.now()) localStorage.removeItem(url);\n        else return cached.data;\n    }\n    const fetched = await fetch(url);\n    const data = await fetched.json();\n    try {\n        localStorage.setItem(\n            url,\n            JSON.stringify({data: data, expiry: expiry})\n        );\n    }\n    catch(err) { // localStorage is full probably\n        localStorage.clear();\n    }\n    return data;\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport throttle from 'lodash/throttle';\nimport cachedFetch from \"./cachedFetch\";\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nconst getURL = async (url) => await cachedFetch({\n    url: url,\n    expiry: new Date(new Date() + 1000 * 60 * 60 * 24 * 7)\n});\n\nasync function locationSearch({term, id}) {\n    const url = 'https://kiwiproxy.herokuapp.com/locations/' + (id ? `id?id=${id}` : `/query?&term=${term}`);\n    const locations = await getURL(url);\n    return locations.locations.map(location => Object.assign(location, {'input': term || id}))\n}\n\nexport default function AirportSelector(props) {\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n    const [value, setValue] = React.useState(props.value);\n\n    const handleSearch = (event, value) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleChange = (event, value) => {\n        setValue(value);\n        props.onChange({[props.name]: value ? value.id : undefined});\n    }\n\n    const ourFetch = React.useMemo(\n        () => throttle(\n            async function(input, callback) {\n                const locations = await locationSearch({term: input});\n                callback(locations);\n            },\n            200\n        ),\n        [],\n    );\n\n    React.useEffect(\n        () => {\n            let active = true;\n            if(\n                typeof value === 'string' ||\n                (value && value.id !== props.value)\n            ) {\n                async function doStuff() {\n                    const locations = await locationSearch({id: props.value});\n                    setValue(locations[0]);\n                }\n                doStuff();\n                return;\n            }\n            if(inputValue === '') return;\n            ourFetch(\n                inputValue,\n                results => {\n                    if(active) setOptions(results || []);\n                }\n            );\n\n            return () => {\n                active = false;\n            };\n        },\n        [inputValue, ourFetch, value, props.value]\n    );\n\n    return (\n        <Autocomplete\n            getOptionLabel={option => (typeof option === 'string' ? option : option.name)}\n            filterOptions={x => x}\n            options={options}\n            onChange={handleChange}\n            value={value}\n            renderInput={params => (\n                <TextField\n                    required={props.required}\n                    {...params}\n                    label={props.label}\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={handleSearch}\n                />\n            )}\n            renderOption={option => {\n                const parts = parse(\n                    option.name,\n                    match(option.name, option.input)\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                    {part.text}\n                                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.name}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n","import TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport getFares from './flightsearch.js';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport AirportSelector from './AirportSelector.js';\n\n\nconst requiredParams = ['departureDate', 'returnDate', 'yourOrigin', 'theirOrigin'];\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.allowSubmit = this.allowSubmit.bind(this);\n        this.startLoading = props.startLoading;\n        this.finishLoading = props.finishLoading;\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.doStuff = this.doStuff.bind(this);\n        this.setSwitchValue = this.setSwitchValue.bind(this);\n        this.seTextBoxValue = this.seTextBoxValue.bind(this);\n        this.setDepartureDate = this.setDepartureDate.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    allowSubmit() {\n        return requiredParams.reduce(\n            (tot, par) => tot && !!this.props.query[par],\n            true\n        ) && !this.props.loading;\n    }\n\n    setDepartureDate(newDate) {\n        if(newDate > this.props.query.returnDate) {\n            this.props.setQuery({\n                returnDate: moment(this.props.query.returnDate + (newDate - this.props.query.departureDate))\n            });\n        }\n        this.props.setQuery({departureDate: moment(newDate)});\n    }\n\n    async doStuff() {\n        this.startLoading();\n        this.props.clearFlights();\n        for await (const fares of await getFares(this.props.query)) this.props.addFlights(fares);\n        this.finishLoading();\n    }\n\n    renderInput = input => input.name;\n    \n    setSwitchValue(event, value) {\n        this.props.setQuery({[event.target.name]: value});\n    }\n\n    seTextBoxValue(event, value) {\n        this.props.setQuery({[event.target.name]: event.target.value});\n    }\n\n    render() {\n        console.log(this.props.query, this.props.query.showAdvancedSettings);\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <Grid container spacing={2}>\n                    <Grid item sm={6} md={3} lg={2} xl={1}>\n                        <MuiPickersUtilsProvider name=\"departureDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                disablePast\n                                variant=\"inline\"\n                                label=\"Departure\"\n                                value={this.props.query.departureDate}\n                                inputVariant=\"outlined\"\n                                onChange={this.setDepartureDate}\n                            />\n                        </MuiPickersUtilsProvider>\n                        {\n                            this.props.query.showAdvancedSettings &&\n                            <TextField\n                                label=\"+/- days\"\n                                name=\"departureDateFlexibility\"\n                                onChange={this.seTextBoxValue}\n                                type=\"number\"\n                                value={this.props.query.departureDateFlexibility || 0}\n                            />\n                        }\n                    </Grid>\n                    <Grid item sm={6} md={3} lg={2} xl={1}>\n                        <MuiPickersUtilsProvider name=\"returnDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                variant=\"inline\"\n                                label=\"Return\"\n                                value={this.props.query.returnDate}\n                                inputVariant=\"outlined\"\n                                onChange={d => this.props.setQuery({returnDate: d})}\n                                minDate={this.props.query.departureDate}\n                            />\n                        </MuiPickersUtilsProvider>\n                        {\n                            this.props.query.showAdvancedSettings &&\n                            <TextField\n                                label=\"+/- days\"\n                                name=\"returnDateFlexibility\"\n                                onChange={this.seTextBoxValue}\n                                type=\"number\"\n                                value={this.props.query.returnDateFlexibility || 0}\n                            />\n                        }\n                    </Grid>\n                    <Grid item sm={6} md={3} lg={2} xl={1}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"yourOrigin\"\n                            name=\"yourOrigin\"\n                            value={this.props.query.yourOrigin}\n                            onChange={this.props.setQuery}\n                            label=\"Your origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} lg={2} xl={1}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"theirOrigin\"\n                            name=\"theirOrigin\"\n                            value={this.props.query.theirOrigin}\n                            onChange={this.props.setQuery}\n                            label=\"Their origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} lg={2} xl={1}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            id=\"destination\"\n                            name=\"destination\"\n                            value={this.props.query.destination}\n                            onChange={this.props.setQuery}\n                            label=\"Destination\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item xl={1}>\n                        <Switch name=\"showAdvancedSettings\" checked={this.props.query.showAdvancedSettings} onChange={this.setSwitchValue}/>\n                    </Grid>\n                    <Grid item sm={6} md={3} lg={2} xl={1}>\n                        <Button variant=\"contained\" color=\"primary\" disabled={!this.allowSubmit()} onClick={this.doStuff}>Search</Button>\n                    </Grid>\n                </Grid>\n                \n            </form>\n        );\n    }\n}\n\nexport default Form\n","import Immutable from 'seamless-immutable';\nimport Timeline from 'react-visjs-timeline'\nimport moment from \"moment\";\nimport React from 'react';\n\nfunction FlightsChart({\n    flights,\n    yourFlight,\n    theirFlight,\n    setYourFlight,\n    setTheirFlight,\n    sortBy,\n    yourMaxPrice,\n    theirMaxPrice,\n}) {\n    const fares = [\n        ...addYoursOrTheirs(flights.yourFares, 'yours'),\n        ...addYoursOrTheirs(flights.theirFares, 'theirs'),\n    ];\n    fares.sort((x, y) => {\n        if(x.id === theirFlight || x.id === yourFlight) return -1;\n        if(y.id === theirFlight || y.id === yourFlight) return 1;\n        if(sortBy === 'price') return Math.sign(x.price - y.price);\n        if(sortBy === 'time') {\n            const ret = Math.sign(\n                new Date(x.utc_departure) - new Date(y.utc_departure) ||\n                new Date(x.utc_arrival) - new Date(y.utc_arrival) ||\n                new Date(x.utc_arrival) - new Date(y.utc_arrival) ||\n                new Date(x.route[x.route.length - 1].utc_arrival) - new Date(y.route[y.route.length - 1].utc_arrival) ||\n                x.price - y.price\n            );\n            return ret;\n        }\n        return 0;\n    });\n\n    const itemsAndGroups = fares.filter(fare => {\n        const maxPrice = {yours: yourMaxPrice, theirs: theirMaxPrice}[fare.yoursOrTheirs];\n        return !maxPrice || maxPrice >= fare.price;\n    }).map(\n        fare => fareToDatum({fare:fare, yourFlight: yourFlight, theirFlight: theirFlight})\n    ).filter(x => x);\n    const items = itemsAndGroups.map(x => x.items).flat();\n    const groups = itemsAndGroups.map((x, idx) => ({...x.group, order:idx}));\n\n    const selectHandler = ({items, event}) => {\n        const selectedFareID = items[0].split('/')[0];\n        const selectedFare = fares.filter(x => x.id === selectedFareID)[0];\n        if(selectedFare.yoursOrTheirs === 'yours') {\n            if(selectedFare.id === yourFlight) setYourFlight('');\n            else setYourFlight(selectedFare.id);\n        }\n        else if(selectedFare.yoursOrTheirs === 'theirs') {\n            if(selectedFare.id === theirFlight) setTheirFlight('');\n            else setTheirFlight(selectedFare.id);\n        }\n        else console.error('unexpected yoursOrTheirs', selectedFare.yoursOrTheirs);\n    }\n    const options = {\n        width: '100%',\n        showMajorLabels: true,\n        showCurrentTime: false,\n        verticalScroll: true,\n        zoomable: false,\n        stack: false,\n        type: 'range',\n        maxHeight: '100%',\n        orientation: {\n            axis: 'both',\n        },\n        format: {\n            minorLabels: {\n                minute: 'h:mma',\n                hour: 'ha',\n            }\n        }\n    };\n    return <Timeline\n        options={options}\n        items={Immutable(items)}\n        groups={Immutable(groups)}\n        selectHandler={selectHandler}\n    />;\n}\n\nfunction addYoursOrTheirs(fares, yoursOrTheirs) {\n    return fares.map(x => {\n        return {...x, ...{yoursOrTheirs: yoursOrTheirs}}\n    });\n}\n\nfunction fareToDatum({fare, yourFlight, theirFlight}) {\n    const selection = yourFlight || theirFlight;\n    if(yourFlight && fare.yoursOrTheirs === 'yours' && fare.id !== yourFlight) return null;\n    if(theirFlight && fare.yoursOrTheirs === 'theirs' && fare.id !== theirFlight) return null;\n    const returnLeg = fare.route[fare.route.length - 1];\n    const price = `€ ${fare.price}`\n    const there = `${fare.flyFrom} -> ${fare.flyTo} ${formatTime(fare.local_departure)} – ${formatTime(fare.local_arrival)}`;\n    const back = `${returnLeg.flyFrom} -> ${returnLeg.flyTo} ${formatTime(returnLeg.local_departure)} – ${formatTime(returnLeg.local_arrival)}`;\n    const label = `${price} | ${there} | ${back}`;\n    const tooltip = fare.route.reduce(\n        (output, leg) => `${output}<br/>${formatTime(leg.local_departure)} ${leg.flyFrom} -> ${leg.flyTo} ${formatTime(leg.local_arrival)}}\\n`,\n        price\n    );\n    const colors = {\n        theirs: ['#DC3912', '#FFAAAA'],\n        yours: ['#3366CC', '#88AAFF']\n    }[fare.yoursOrTheirs];\n    const flight_color = fare.id === selection ? colors[1] : colors[0];\n    const gap_color = fare.id === selection ? colors[0] : colors[1];\n    const bars = [];\n    let previousLeg;\n    for(const leg of fare.route) {\n        bars.push({\n            group: fare.id,\n            id: fare.id + '/' + leg.id,\n            content: '✈',\n            style: `font-size: \"6px\"; background-color: ${flight_color};`,\n            title: tooltip,\n            start: new Date(leg.utc_departure),\n            end: new Date(leg.utc_arrival)\n        });\n        if(previousLeg) bars.push({\n            group: fare.id,\n            id: fare.id + '/' + leg.id + '/gap',\n            content: previousLeg.flyTo === fare.flyTo ? label : previousLeg.flyTo,\n            style: `font-size: \"6px\"; background-color: ${gap_color};`,\n            title: tooltip,\n            start: new Date(previousLeg.utc_arrival),\n            end: new Date(leg.utc_departure)\n        });\n        previousLeg = leg;\n    };\n    return {\n        items: bars,\n        group: {\n            id: fare.id,\n            title: label,\n            content: ''\n        }\n    };\n}\n\nfunction formatTime(time) {\n    return moment(time).format('DD MMM HH:mm');\n}\n\nconst equal = (x, y, keys) => {\n    for(const key of keys) if(x[key] !== y[key]) return false;\n    return true;\n}\n\nexport default React.memo(\n    FlightsChart,\n    (x, y) => equal(x, y, ['flights', 'yourFlight', 'theirFlight', 'sortBy', 'yourMaxPrice', 'theirMaxPrice'])\n);\n","import moment from \"moment\";\nimport FlightsChart from \"./FlightsChart\";\nimport React from 'react';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from '@material-ui/core/CardActions';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n    Typography,\n    MenuItem,\n    Slider,\n    Select,\n    Grid,\n    Link,\n    Tabs,\n    Tab,\n    Paper,\n    Card,\n    CardContent,\n    Avatar,\n    IconButton,\n} from '@material-ui/core';\n\nexport default function ResultsTabs(props) {\n    const setDestination = (event, newValue) => {\n        props.setQuery({expand: newValue, theirFlight: null, yourFlight: null});\n    };\n    const setYourFlight = (newValue) => props.setQuery({yourFlight: newValue});\n    const setTheirFlight = (newValue) => props.setQuery({theirFlight: newValue});\n    const setYourMaxPrice = (event, value) => props.setQuery({yourMaxPrice: value});\n    const setTheirMaxPrice = (event, value) => props.setQuery({theirMaxPrice: value});\n    const setSortBy = (event, newValue) => props.setQuery({sortBy: event.target.value});\n    const airports = Object.keys(props.flights);\n    const value = airports.indexOf(props.query.expand) !== -1 ? props.query.expand : false;\n    return (\n        <Paper>\n            <Tabs variant=\"scrollable\" scrollButtons=\"auto\" value={value} onChange={setDestination}>\n                {Object.values(props.flights).map(\n                    flight => {\n                        const myFirst = flight.yourFares[0];\n                        const price = minPrice(flight.yourFares) + minPrice(flight.theirFares);\n                        const label = `€ ${price} ${myFirst.cityTo}, ${myFirst.countryTo.name}`;\n                        return <Tab key={myFirst.cityCodeTo} value={myFirst.cityCodeTo} label={label}/>;\n                    }\n                )\n                }\n            </Tabs>\n            <FlightSelector\n                cityCodeTo={props.query.expand}\n                yourFlight={props.query.yourFlight}\n                theirFlight={props.query.theirFlight}\n                flights={props.flights[props.query.expand]}\n                setYourFlight={setYourFlight}\n                setTheirFlight={setTheirFlight}\n                sortBy={props.query.sortBy || 'price'}\n                setSortBy={setSortBy}\n                yourMaxPrice={props.query.yourMaxPrice}\n                theirMaxPrice={props.query.theirMaxPrice}\n                setYourMaxPrice={setYourMaxPrice}\n                setTheirMaxPrice={setTheirMaxPrice}\n            />\n            <SelectedFlights\n                yourFlight={props.query.yourFlight}\n                theirFlight={props.query.theirFlight}\n                setTheirFlight={setTheirFlight}\n                setYourFlight={setYourFlight}\n                flights={props.flights[props.query.expand]}\n            />\n        </Paper>\n    )\n}\n\nfunction minPrice(fares) {\n    return Math.min(...(fares.map(fare => fare.price)));\n}\n\nfunction FlightSelector({\n    flights,\n    yourFlight,\n    theirFlight,\n    setYourFlight,\n    setTheirFlight,\n    sortBy,\n    setSortBy,\n    yourMaxPrice,\n    theirMaxPrice,\n    setYourMaxPrice,\n    setTheirMaxPrice,\n}) {\n    if(!flights) return null;\n    if(yourFlight && theirFlight) return null;\n    const yourMax = flights.yourFares.reduce((maxPrice, fare) => Math.max(fare.price, maxPrice), 0);\n    const theirMax = flights.theirFares.reduce((maxPrice, fare) => Math.max(fare.price, maxPrice), 0);\n    const yourMin = flights.yourFares.reduce((minPrice, fare) => Math.min(fare.price, minPrice), Infinity);\n    const theirMin = flights.theirFares.reduce((minPrice, fare) => Math.min(fare.price, minPrice), Infinity);\n    return (\n        <div>\n            <Grid container spacing={10}>\n                <Grid item xs/>\n                <Grid item xs>\n                    <Typography gutterBottom>Sorting</Typography>\n                    <Select onChange={setSortBy} value={sortBy}>\n                        <MenuItem value=\"price\">↑Price</MenuItem>\n                        <MenuItem value=\"time\">↑Time</MenuItem>\n                    </Select>\n                </Grid>\n                <Grid item xs>\n                    <Typography gutterBottom>Max price</Typography>\n                    <Slider\n                        defaultValue={yourMaxPrice || yourMax}\n                        onChangeCommitted={setYourMaxPrice}\n                        valueLabelDisplay=\"auto\"\n                        min={yourMin}\n                        max={yourMax}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography gutterBottom>Max price</Typography>\n                    <Slider\n                        defaultValue={theirMaxPrice || theirMax}\n                        onChangeCommitted={setTheirMaxPrice}\n                        valueLabelDisplay=\"auto\"\n                        color=\"secondary\"\n                        min={theirMin}\n                        max={theirMax}\n                    />\n                </Grid>\n                <Grid item xs/>\n            </Grid>\n            <FlightsChart\n                flights={flights}\n                yourFlight={yourFlight}\n                theirFlight={theirFlight}\n                setYourFlight={setYourFlight}\n                setTheirFlight={setTheirFlight}\n                sortBy={sortBy}\n                yourMaxPrice={yourMaxPrice}\n                theirMaxPrice={theirMaxPrice}\n                setYourMaxPrice={setYourMaxPrice}\n                setTheirMaxPrice={setTheirMaxPrice}\n            />\n        </div>\n    );\n}\n\nfunction SelectedFlights({yourFlight, theirFlight, flights, setTheirFlight, setYourFlight}) {\n    if(!flights) return null;\n    const theirs = theirFlight && flights.theirFares.filter(c => c.id === theirFlight)[0];\n    const yours = yourFlight && flights.yourFares.filter(c => c.id === yourFlight)[0];\n    if(!theirs && !yours) return null;\n    return <Paper>\n        <Grid container spacing={10}>\n            {theirs && <Flight flight={theirs} clearFlight={() => setTheirFlight(null)}/>}\n            {yours && <Flight flight={yours} clearFlight={() => setYourFlight(null)}/>}\n        </Grid>\n    </Paper>\n}\n\nfunction Flight({flight, clearFlight}) {\n    return <Grid item>\n        <Card>\n            <CardHeader\n                title={`${flight.cityFrom} -> ${flight.cityTo}`}\n                action={<IconButton aria-label=\"delete\" onClick={clearFlight}><CloseIcon/></IconButton>}\n            />\n            {flight.route.map(\n                leg => {\n                    return <div key={leg.id}>\n                        <Avatar src={`https://images.kiwi.com/airlines/64/${leg.airline}.png`}/>\n                        <CardContent>\n                            {formatTime(leg.local_departure)} {leg.cityFrom} ({leg.flyFrom})\n                            <br/>\n                            {formatTime(leg.local_arrival)} {leg.cityTo} ({leg.flyTo})\n                        </CardContent>\n                    </div>\n                }\n            )}\n            <CardActions>\n                <Link target=\"_blank\" rel=\"noopener\" href={flight.deep_link}>€ {flight.price}</Link>\n            </CardActions>\n        </Card>\n    </Grid>\n}\n\nfunction formatTime(time) {\n    return moment(time).format('DD MMM HH:mm');\n}\n","import React from 'react';\nimport './App.css';\nimport Form from './Form.js';\nimport ResultsTabs from './ResultsTabs.js';\nimport {\n  useQueryParams,\n  StringParam,\n  DateParam,\n  NumberParam,\n  BooleanParam,\n} from 'use-query-params';\n\n\nfunction App(props) {\n    const [query, setQuery] = useQueryParams({\n        destination: StringParam,\n        theirOrigin: StringParam,\n        yourOrigin: StringParam,\n        departureDate: DateParam,\n        returnDate: DateParam,\n        departureDateFlexibility: NumberParam,\n        returnDateFlexibility: NumberParam,\n        max_stopovers: NumberParam,\n        expand: StringParam,\n        yourFlight: StringParam,\n        theirFlight: StringParam,\n        sortBy: StringParam,\n        yourMaxPrice: NumberParam,\n        theirMaxPrice: NumberParam,\n        max_fly_duration: NumberParam,\n        showAdvancedSettings: BooleanParam,\n    });\n    const [loading, setLoading] = React.useState(0);\n    const [flights, setFlights] = React.useState({});\n    const startLoading = () => setLoading(loading + 1);\n    const finishLoading = () => setLoading(loading - 1);\n    const addFlights = (newFlights) => setFlights({...flights, ...newFlights});\n    const clearFlights = () => setFlights([]);\n    return (\n        <div>\n            <Form\n                addFlights={addFlights}\n                clearFlights={clearFlights}\n                startLoading={startLoading}\n                finishLoading={finishLoading}\n                loading={loading > 0}\n                query={query}\n                setQuery={setQuery}\n            />\n            <Loading id=\"loading\" loading={loading > 0}/>\n            <ResultsTabs flights={flights} setQuery={setQuery} query={query}/>\n        </div>\n  );\n}\n\nfunction Loading(props) {\n    return <div id={props.id}>{props.loading ? '✈' : ''}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Route, HashRouter as Router } from 'react-router-dom'\nimport { QueryParamProvider } from 'use-query-params';\nimport App from './App'\n\nconst routing = (\n<Router>\n    <QueryParamProvider ReactRouterRoute={Route}>\n        <App />\n    </QueryParamProvider>\n</Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n"],"sourceRoot":""}