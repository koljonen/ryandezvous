{"version":3,"sources":["flightsearch.js","AirportSelector.js","Form.js","ResultsTable.js","App.js","index.js"],"names":["formatKiwiDate","date","moment","format","addDays","days","result","Date","setDate","getDate","getFaresFromAirport","throttle","airport","state","a","async","dateFlexibility","dateFrom","departureDate","dateTo","returnFrom","returnDate","returnTo","fareURL","buildUrl","path","queryParams","fly_from","id","curr","ret_from_diff_airport","fly_to","destination","undefined","max_stopovers","replace","fetch","json","flights","data","arrayToDict","map","forEach","flight","getKey","push","cityCodeTo","maybeAdd","myFare","herFare","candidates","myArrival","route","local_arrival","herArrival","myReturn","length","herReturn","arrivalDiff","Math","abs","returnDiff","msTogether","min","max","msApart","maxDiffHours","day","local_departure","cityTo","countryTo","name","myArrivalDate","herArrivalDate","myReturnDate","herReturnDate","myDepartureDate","herDepartureDate","price","timeApart","duration","timeTogether","myLink","deep_link","herLink","getCandidates","myFaresArray","herFaresDict","revertParams","herFaresFromCity","yourOrigin","myFares","theirOrigin","herFares","myFaresDict","Object","keys","myFaresToDestination","newCandidates","herFaresToDestination","getFares","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","locationSearch","term","url","locationJson","locations","location","assign","AirportSelector","props","classes","React","useState","inputValue","setInputValue","options","setOptions","handleSearch","event","value","target","ourFetch","useMemo","input","callback","useEffect","active","results","Autocomplete","style","width","getOptionLabel","option","filterOptions","x","onChange","renderInput","params","TextField","required","label","variant","fullWidth","renderOption","parts","parse","match","Grid","container","alignItems","item","className","xs","part","index","key","fontWeight","highlight","Typography","nextThursday","add","isoWeekday","requiredParams","fillDefault","whichAirport","filter","Form","allowSubmit","doStuff","handleChange","e","this","setState","query","bind","startLoading","finishLoading","handleSubmit","setDepartureDate","prevProps","prevState","snapshot","oldMatch","newMatch","setAirport","which","newState","preventDefault","reduce","tot","par","loading","newDate","clearCandidates","setQuery","toDate","fares","addCandidates","onSubmit","sm","md","xl","utils","MomentUtils","DatePicker","disablePast","inputVariant","d","minDate","Button","disabled","onClick","Component","ResultsTable","columns","title","field","formatter","formatterParams","symbol","precision","headerFilter","headerFilterFunc","headerValue","rowValue","align","outputFormat","cell","onRendered","getValue","humanize","sorter","b","asSeconds","parseDuration","height","layout","reactiveData","s","split","numberPart","parseInt","unitPart","Loading","window","updateLocale","week","dow","App","useQueryParams","StringParam","DateParam","NumberParam","setLoading","setCandidates","routing","ReactRouterRoute","Route","ReactDOM","render","document","getElementById"],"mappings":"8bAIA,SAASA,EAAeC,GACpB,OAAOC,IAAOD,GAAME,OAAO,cAG/B,SAASC,EAAQH,EAAMI,GACrB,IAAMC,EAAS,IAAIC,KAAKN,GAExB,OADAK,EAAOE,QAAQF,EAAOG,UAAYJ,GAC3BC,EAGT,IAAMI,EAAsBC,KACxB,SAAgBC,EAASC,GAAzB,2BAAAC,EAAAC,OAAA,uDACUC,EAAkBH,EAAMG,iBAAmB,EAC3CC,EAAWb,EAAQS,EAAMK,eAAgBF,GACzCG,EAASf,EAAQS,EAAMK,cAAeF,GACtCI,EAAahB,EAAQS,EAAMQ,YAAaL,GACxCM,EAAWlB,EAAQS,EAAMQ,WAAYL,GACrCO,EAAUC,IACZ,kCACA,CACIC,KAAM,YACNC,YAAa,CACTC,SAAUf,EAAQgB,GAClBX,SAAUjB,EAAeiB,GACzBE,OAAQnB,EAAemB,GACvBC,WAAYpB,EAAeoB,GAC3BE,SAAUtB,EAAesB,GACzBO,KAAM,MACNC,sBAAuB,EACvBC,OAAQlB,EAAMmB,YAAcnB,EAAMmB,YAAYJ,QAAKK,EACnDC,cAAerB,EAAMqB,eAAiB,KAGhDC,QAAQ,OAAQ,KAtBtB,OAAArB,EAAA,WAAAA,EAAA,MAuBkCsB,MAAMb,IAvBxC,0BAuBkDc,OAvBlD,oDAuBUC,EAvBV,OAuB0DC,KAvB1D,kBAwBWD,GAxBX,wCA0BA,KAIJ,SAASE,EAAYF,GAAoB,IAAXG,EAAU,uDAAJ,GAShC,OARAH,EAAQI,SACJ,SAACC,GAGG,OAFGC,EAAOD,KAAWF,EAAKA,EAAIG,EAAOD,IAASE,KAAKF,GAC9CF,EAAIG,EAAOD,IAAW,CAACA,GACrBF,IAEX,IAEGA,EAGX,SAASG,EAAOD,GACZ,OAAOA,EAAOG,WAGlB,SAASC,EAASC,EAAQC,EAASC,GAC/B,IACMC,EAAY,IAAI5C,KAAKyC,EAAOI,MAAM,GAAGC,eACrCC,EAAa,IAAI/C,KAAK0C,EAAQG,MAAM,GAAGC,eACvCE,EAAW,IAAIhD,KAAKyC,EAAOI,MAAMJ,EAAOI,MAAMI,OAAS,GAAGH,eAC1DI,EAAY,IAAIlD,KAAK0C,EAAQG,MAAMH,EAAQG,MAAMI,OAAS,GAAGH,eAC7DK,EAAcC,KAAKC,IAAIT,EAAYG,GACnCO,EAAaF,KAAKC,IAAIL,EAAWE,GACjCK,EAAaH,KAAKI,IAAIR,EAAUE,GAAaE,KAAKK,IAAIb,EAAWG,GACjEW,EAAUP,EAAcG,EAC3BH,EAAcG,EAAaK,QAC3BlB,EAAOF,aAAeG,EAAQH,aAC9BgB,EAAa,OACbA,GAAcG,GACjBf,EAAWL,KAAK,CACZsB,IAAKnB,EAAOI,MAAM,GAAGgB,gBACrBpC,YAAagB,EAAOqB,OAAS,KAAOrB,EAAOsB,UAAUC,KACrDC,cAAexB,EAAOI,MAAM,GAAGC,cAC/BoB,eAAgBxB,EAAQG,MAAM,GAAGC,cACjCqB,aAAc1B,EAAOI,MAAMJ,EAAOI,MAAMI,OAAS,GAAGH,cACpDsB,cAAe1B,EAAQG,MAAMH,EAAQG,MAAMI,OAAS,GAAGH,cACvDuB,gBAAiB5B,EAAOI,MAAM,GAAGgB,gBACjCS,iBAAkB5B,EAAQG,MAAM,GAAGgB,gBACnCU,MAAO9B,EAAO8B,MAAQ7B,EAAQ6B,MAC9BC,UAAW7E,IAAO8E,SAASf,GAC3BgB,aAAc/E,IAAO8E,SAASlB,GAC9BoB,OAAQlC,EAAOmC,UACfC,QAASnC,EAAQkC,aAIzB,SAASE,EAAT,GAA4E,IAApDC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,aAAqC,IAAvBC,oBAAuB,SACjEtC,EAAa,GAYnB,OAXAoC,EAAa5C,SACT,SAAAM,GACI,IAAMyC,EAAmBF,EAAa3C,EAAOI,IAC1CyC,GAAkBA,EAAiB/C,SAClC,SAAAO,GACOuC,EAAczC,EAASE,EAASD,EAAQE,GACtCH,EAASC,EAAQC,EAASC,SAKxCA,E,4CAGX,WAAyBrC,GAAzB,yCAAAC,EAAA,kFAC0BJ,EAAoBG,EAAM6E,WAAY7E,IADhE,cACU8E,EADV,4BAE2BjF,EAAoBG,EAAM+E,YAAa/E,IAFlE,OAKI,OAHMgF,EAFV,OAGUC,EAActD,EAAYmD,GAC1BJ,EAAe/C,EAAYqD,GAJrC,UAKUR,EAAc,CAACC,aAAcK,EAASJ,aAAaA,IAL7D,cAM6BQ,OAAOC,KAAKT,GANzC,gDAMcvD,EANd,QAO0B8D,GAP1B,qFAQ2CpF,EAC/BG,EAAM6E,WAD4C,eAE9C7E,EAF8C,CAEvCmB,YAAa,CAACJ,GAAII,OAVzC,QAaQ,OALMiE,EARd,OAYcC,EAAgBb,EAAc,CAACC,aAAcW,EAAsBV,aAAcA,IAZ/F,UAacW,EAbd,0CAgB6BH,OAAOC,KAAKF,GAhBzC,gDAgBc9D,EAhBd,QAiB0BuD,GAjB1B,qFAkB4C7E,EAChCG,EAAM+E,YAD6C,eAE/C/E,EAF+C,CAExCmB,YAAa,CAACJ,GAAII,OApBzC,QAuBQ,OALMmE,EAlBd,OAsBcD,EAAgBb,EAAc,CAACC,aAAca,EAAuBZ,aAAcO,EAAaN,cAAc,IAtB3H,UAuBcU,EAvBd,yE,sBA4BeE,M,+KC7HTC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,MAAOF,EAAMG,QAAQC,KAAKC,UAC1BC,YAAaN,EAAMO,QAAQ,QAInC,SAAeC,GAAf,0BAAAjG,EAAAC,OAAA,uDAA+BiG,EAA/B,EAA+BA,KAAMpF,EAArC,EAAqCA,GAC3BqF,EAAM,8CAAgDrF,EAAE,gBAAYA,GAAZ,uBAAmCoF,IADrG,WAAAlG,EAAA,MAE+BsB,MAAM6E,IAFrC,cAEUC,EAFV,kBAAApG,EAAA,MAG4BoG,EAAa7E,QAHzC,cAGU8E,EAHV,yBAIWA,EAAUA,UAAU1E,KAAI,SAAA2E,GAAQ,OAAIrB,OAAOsB,OAAOD,EAAU,CAAC,MAASJ,GAAQpF,QAJzF,qCAOe,SAAS0F,GAAgBC,GACpC,IAAMC,EAAUnB,KAD2B,EAEPoB,IAAMC,SAAS,IAFR,mBAEpCC,EAFoC,KAExBC,EAFwB,OAGbH,IAAMC,SAAS,IAHF,mBAGpCG,EAHoC,KAG3BC,EAH2B,KAKrCC,EAAe,SAACC,EAAOC,GACzBL,EAAcI,EAAME,OAAOD,QAYzBE,EAAWV,IAAMW,SACnB,kBAAMzH,KACF,SAAe0H,EAAOC,GAAtB,eAAAxH,EAAAC,OAAA,kEAAAD,EAAA,MAC4BiG,GAAe,CAACC,KAAMqB,KADlD,OACUlB,EADV,OAEImB,EAASnB,GAFb,uCAIA,OAEJ,IA0BJ,OAvBAM,IAAMc,WACF,WACI,IAAIC,GAAS,EACb,GAAmB,KAAfb,EAaJ,OATAQ,EACIR,GACA,SAAAc,GACQD,GACAV,EAAWW,GAAW,OAK3B,WACHD,GAAS,GAbTV,EAAW,MAgBnB,CAACH,EAAYQ,IAIb,kBAACO,EAAA,EAAD,CACIC,MAAO,CAAEC,MAAO,SAChBC,eAAgB,SAAAC,GAAM,MAAuB,kBAAXA,EAAsBA,EAASA,EAAOvE,MACxEwE,cAAe,SAAAC,GAAC,OAAIA,GACpBnB,QAASA,EACToB,SAjDa,SAACjB,EAAOC,GACzBV,EAAM0B,SAAS,CACXf,OAAO,CACH3D,KAAMgD,EAAMhD,KACZ0D,MAAOA,MA8CXA,MAAOV,EAAMU,MACbiB,YAAa,SAAAC,GAAM,OACf,kBAACC,EAAA,EAAD,eACIC,SAAU9B,EAAM8B,UACZF,EAFR,CAGIG,MAAO/B,EAAM+B,MACbC,QAAQ,WACRC,WAAS,EACTP,SAAUlB,MAGlB0B,aAAc,SAAAX,GACV,IAAMY,EAAQC,IACVb,EAAOvE,KACPqF,KAAMd,EAAOvE,KAAMuE,EAAOT,QAG9B,OACI,kBAACwB,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,UACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACN,kBAAC,IAAD,CAAgBC,UAAWzC,EAAQhB,QAEvC,kBAACqD,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,GACRR,EAAMjH,KAAI,SAAC0H,EAAMC,GAAP,OACP,0BAAMC,IAAKD,EAAOzB,MAAO,CAAE2B,WAAYH,EAAKI,UAAY,IAAM,MACzDJ,EAAKxD,SAId,kBAAC6D,EAAA,EAAD,CAAYjB,QAAQ,QAAQ9C,MAAM,iBAC7BqC,EAAOvE,WCrGxC,SAASkG,KACL,OAAOvK,MAASwK,KAAKxK,MAASyK,cAAgB,EAAK,GAAK,GAAKzK,MAASyK,aAAc,QAGxF,IAAMC,GAAiB,CAAC,gBAAiB,aAAc,aAAc,eAErE,SAAeC,GAAYC,EAAcjK,GAAzC,mBAAAC,EAAAC,OAAA,oDACOF,EAAMiK,GADb,uBAEc7D,EAFd,0DAEuEpG,EAAMiK,IAF7E,WAAAhK,EAAA,MAGmCsB,MAAM6E,IAHzC,cAGcC,EAHd,kBAAApG,EAAA,MAIgCoG,EAAa7E,QAJ7C,OAIc8E,EAJd,OAKQtG,EAAMiK,GAAgB3D,EAAUA,UAAU4D,QACtC,SAAA/B,GAAC,OAAIA,EAAEpH,KAAOf,EAAMiK,MACtB,GAPV,qC,IA0LeE,G,YA9KX,WAAYzD,GAAQ,IAAD,EAmBa1G,EAAOoK,EAAaC,EAnBjC,4BACf,4CAAM3D,KAuDV4D,aAAe,SAASC,GACpBC,KAAKC,SAAL,eAAiBF,EAAElD,OAAO3D,KAAO6G,EAAElD,OAAOD,SAzD3B,EA8FnBiB,YAAc,SAAAb,GAAK,OAAIA,EAAM9D,MA5FzB,EAAK1D,MAAL,aACIK,cAAeuJ,KACfpJ,WAAYoJ,KAAeC,IAAI,EAAG,QAClC1I,YAAa,IACVuF,EAAMgE,OAGb,EAAK1K,MAAMK,cAAgBhB,IAAO,EAAKW,MAAMK,eAC7C,EAAKL,MAAMQ,WAAanB,IAAO,EAAKW,MAAMQ,YAC1C,EAAK4J,YAAc,EAAKA,YAAYO,KAAjB,gBACnB,EAAKC,aAAelE,EAAMkE,aAC1B,EAAKC,cAAgBnE,EAAMmE,cAC3B,EAAKP,aAAe,EAAKA,aAAaK,KAAlB,gBACpB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKN,QAAU,EAAKA,QAAQM,KAAb,gBAEf,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACI3K,EAMf,EAAKA,MANiBoK,EAMV,EAAKA,YANkBC,EAML,EAAKA,QANhD,EAAApK,EAAAC,OAAA,kEAAAD,EAAA,MACU+J,GAAY,aAAchK,IADpC,yBAAAC,EAAA,MAEU+J,GAAY,cAAehK,IAFrC,yBAAAC,EAAA,MAGU+J,GAAY,cAAehK,IAHrC,OAIQoK,KAAeC,IAJvB,qCAnBe,E,gFA4BAW,EAAWC,EAAWC,GACrC,IAAMT,EAAWD,KAAKC,SAASE,KAAKH,MAC9BW,EAAWH,EAAUN,MACrBU,EAAWZ,KAAK9D,MAAMgE,MAY5B,SAAeW,EAAWC,GAA1B,eAAArL,EAAAC,OAAA,mDACOkL,EAASE,KAAWH,EAASG,GADpC,uBAEcC,EAAW,IACRD,GAASF,EAASE,GAHnC,WAAArL,EAAA,MAIc+J,GAAYsB,EAAOC,IAJjC,OAKQd,EAASc,GALjB,qCAXGH,EAAS5K,aAAe2K,EAAS3K,YAChCgK,KAAKC,SAAS,CAACjK,WAAYnB,IAAO+L,EAAS5K,cAE5C4K,EAASjL,kBAAoBgL,EAAShL,iBACrCqK,KAAKC,SAAS,CAACtK,gBAAiBiL,EAASjL,kBAG1CiL,EAAS/J,gBAAkB8J,EAAS9J,eACnCmJ,KAAKC,SAAS,CAACpJ,cAAe+J,EAAS/J,gBAExC+J,EAAS/K,gBAAkB8K,EAAS9K,eAAemK,KAAKO,iBAAiBK,EAAS/K,eASrFgL,EAAW,cACXA,EAAW,eACXA,EAAW,iB,mCAOFlE,GACTA,EAAMqE,mB,oCAGK,IAAD,OACV,OAAOzB,GAAe0B,QAClB,SAACC,EAAKC,GAAN,OAAcD,KAAS,EAAK1L,MAAM2L,MAClC,KACEnB,KAAK9D,MAAMkF,U,uCAGJC,GACVA,EAAUrB,KAAKxK,MAAMQ,YACpBgK,KAAKC,SAAS,CACVjK,WAAYnB,IAAOmL,KAAKxK,MAAMQ,YAAcqL,EAAUrB,KAAKxK,MAAMK,kBAGzEmK,KAAKC,SAAS,CAACpK,cAAehB,IAAOwM,O,2HAIrCrB,KAAKI,eACLJ,KAAK9D,MAAMoF,kBACXtB,KAAK9D,MAAMqF,SAAS,CAChBlH,WAAY2F,KAAKxK,MAAM6E,WAAW9D,GAClCgE,YAAayF,KAAKxK,MAAM+E,YAAYhE,GACpCI,YAAaqJ,KAAKxK,MAAMmB,YAAcqJ,KAAKxK,MAAMmB,YAAYJ,QAAKK,EAClEf,cAAemK,KAAKxK,MAAMK,cAAc2L,SACxCxL,WAAYgK,KAAKxK,MAAMQ,WAAWwL,W,+CAENzG,EAASiF,KAAKxK,Q,sLAA7BiM,E,EAAqCzB,KAAK9D,MAAMwF,cAAcD,G,6TAC/EzB,KAAKK,gB,4GAKC,IAAD,OACL,OACI,0BAAMsB,SAAU3B,KAAKM,cACjB,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAAChD,QAAS,GACrB,kBAAC+C,EAAA,EAAD,CAAMG,MAAI,EAACiD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAAC,IAAD,CAAyB5I,KAAK,gBAAgB6I,MAAOC,KACjD,kBAACC,EAAA,EAAD,CACIjE,UAAQ,EACRkE,aAAW,EACXhE,QAAQ,SACRD,MAAM,YACNrB,MAAOoD,KAAKxK,MAAMK,cAClBsM,aAAa,WACbvE,SAAUoC,KAAKO,qBAI3B,kBAAC/B,EAAA,EAAD,CAAMG,MAAI,EAACiD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAAC,IAAD,CAAyB5I,KAAK,aAAa6I,MAAOC,KAC9C,kBAACC,EAAA,EAAD,CACIjE,UAAQ,EACRE,QAAQ,SACRD,MAAM,SACNrB,MAAOoD,KAAKxK,MAAMQ,WAClBmM,aAAa,WACbvE,SAAU,SAAAwE,GAAC,OAAI,EAAKnC,SAAS,CAACjK,WAAYoM,KAC1CC,QAASrC,KAAKxK,MAAMK,kBAIhC,kBAAC2I,EAAA,EAAD,CAAMG,MAAI,EAACiD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAAC7F,GAAD,CACImE,aAAcJ,KAAKI,aACnBC,cAAeL,KAAKK,cACpBrC,UAAQ,EACRzH,GAAG,aACH2C,KAAK,aACL0D,MAAOoD,KAAKxK,MAAM6E,WAClBuD,SAAUoC,KAAKF,aACf7B,MAAM,cACNJ,YAAamC,KAAKnC,eAG1B,kBAACW,EAAA,EAAD,CAAMG,MAAI,EAACiD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAAC7F,GAAD,CACImE,aAAcJ,KAAKI,aACnBC,cAAeL,KAAKK,cACpBrC,UAAQ,EACRzH,GAAG,cACH2C,KAAK,cACL0D,MAAOoD,KAAKxK,MAAM+E,YAClBqD,SAAUoC,KAAKF,aACf7B,MAAM,eACNJ,YAAamC,KAAKnC,eAG1B,kBAACW,EAAA,EAAD,CAAMG,MAAI,EAACiD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAAC7F,GAAD,CACImE,aAAcJ,KAAKI,aACnBC,cAAeL,KAAKK,cACpB9J,GAAG,cACH2C,KAAK,cACL0D,MAAOoD,KAAKxK,MAAMmB,YAClBiH,SAAUoC,KAAKF,aACf7B,MAAM,cACNJ,YAAamC,KAAKnC,eAG1B,kBAACW,EAAA,EAAD,CAAMG,MAAI,EAACiD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAACQ,EAAA,EAAD,CAAQpE,QAAQ,YAAY9C,MAAM,UAAUmH,UAAWvC,KAAKJ,cAAe4C,QAASxC,KAAKH,SAAzF,iB,GAtKLzD,IAAMqG,W,yBCxBV,SAASC,GAAaxG,GACjC,IAAMyG,EAAU,CACZ,CACIC,MAAO,QACPC,MAAO,QACPC,UAAW,QACXC,gBAAiB,CACbC,OAAQ,SACRC,UAAW,GAEfC,cAAc,EACdC,iBAAkB,SAACC,EAAaC,GAAd,OAA2BD,GAAeC,IAEhE,CACIT,MAAO,cACPC,MAAO,cACPK,cAAc,GAElB,CACIN,MAAO,MACPD,QAAS,CACL,CACIC,MAAO,UACPC,MAAO,gBACPS,MAAO,SACPR,UAAU,WACVC,gBAAiB,CACbQ,aAAa,qBAGrB,CACIX,MAAO,SACPC,MAAO,eACPS,MAAO,SACPR,UAAU,WACVC,gBAAiB,CACbQ,aAAa,qBAGrB,CACIX,MAAO,OACPC,MAAO,SACPC,UAAU,OACVC,gBAAiB,CACb9E,MAAO,MACPpB,OAAQ,aAKxB,CACI+F,MAAO,OACPD,QAAS,CACL,CACIC,MAAO,UACPC,MAAO,iBACPS,MAAO,SACPR,UAAU,WACVC,gBAAiB,CACbQ,aAAa,qBAGrB,CACIX,MAAO,SACPC,MAAO,gBACPS,MAAO,SACPR,UAAU,WACVC,gBAAiB,CACbQ,aAAa,qBAGrB,CACIX,MAAO,OACPC,MAAO,UACPC,UAAU,OACVC,gBAAiB,CACb9E,MAAO,MACPpB,OAAQ,aAKxB,CACI+F,MAAO,WACPC,MAAO,eACPC,UAAW,SAASU,EAAMT,EAAiBU,GACvC,OAAOD,EAAKE,WAAWC,YAE3BC,OAAQ,SAACnO,EAAGoO,GAAJ,OAAUpO,EAAEqO,YAAcD,EAAEC,aACpCZ,cAAc,EACdC,iBAAkB,SAACC,EAAaC,GAAd,OAA2BU,GAAcX,IAAgBC,IAE/E,CACIT,MAAO,QACPC,MAAO,YACPC,UAAW,SAASU,EAAMT,EAAiBU,GACvC,OAAOD,EAAKE,WAAWC,YAE3BC,OAAQ,SAACnO,EAAGoO,GAAJ,OAAUpO,EAAEqO,YAAcD,EAAEC,aACpCZ,cAAc,EACdC,iBAAkB,SAACC,EAAaC,GAAd,OAA2BU,GAAcX,IAAgBC,KAGnF,OACI,kBAAC,kBAAD,CACInM,KAAMgF,EAAMrE,WACZ8K,QAASA,EACTnG,QAAS,CACLwH,OAAO,OACPC,OAAO,aACPC,cAAa,KAM7B,SAASH,GAAcI,GACnB,IAAM9F,EAAQ8F,EAAEC,MAAM,KAChBC,EAA0B,MAAbhG,EAAM,IAA2B,OAAbA,EAAM,GAAc,EAAIiG,SAASjG,EAAM,IACxEkG,EAA6C,MAAjClG,EAAM,GAAGA,EAAM,GAAGlG,OAAQ,GAAakG,EAAM,GAAKA,EAAM,GAAK,IAC/E,OAAOxJ,IAAO8E,SAAS0K,EAAYE,GCzEvC,SAASC,GAAQtI,GACb,OAAO,yBAAK3F,GAAI2F,EAAM3F,IAAK2F,EAAMkF,QAAU,SAAM,IAzCrDqD,OAAO5P,OAASA,IAChBA,IAAO6P,aAAa,KAAM,CACtBC,KAAM,CACJC,IAAK,KAyCIC,OArCf,SAAa3I,GAAQ,IAAD,EACU4I,YAAe,CACrCnO,YAAaoO,IACbxK,YAAawK,IACb1K,WAAY0K,IACZlP,cAAemP,IACfhP,WAAYgP,IACZrP,gBAAiBsP,IACjBpO,cAAeoO,MARH,mBACT/E,EADS,KACFqB,EADE,OAUcnF,IAAMC,SAAS,GAV7B,mBAUT+E,EAVS,KAUA8D,EAVA,OAWoB9I,IAAMC,SAAS,IAXnC,mBAWTxE,EAXS,KAWGsN,EAXH,KAgBhB,OACI,6BACI,kBAAC,GAAD,CACIzD,cALU,SAAC7G,GAAD,OAAmBsK,EAAc,GAAD,mBAAKtN,GAAL,YAAoBgD,MAM9DyG,gBALY,kBAAM6D,EAAc,KAMhC/E,aATS,kBAAM8E,EAAW9D,EAAU,IAUpCf,cATU,kBAAM6E,EAAW9D,EAAU,IAUrCA,QAASA,EAAU,EACnBlB,MAAOA,EACPqB,SAAUA,IAEd,kBAACiD,GAAD,CAASjO,GAAG,UAAU6K,QAASA,EAAU,IACzC,kBAACsB,GAAD,CAAc7K,WAAYA,MCzChCuN,GACN,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAoBC,iBAAkBC,KAClC,kBAAC,GAAD,QAKRC,IAASC,OAAOJ,GAASK,SAASC,eAAe,W","file":"static/js/main.283974b3.chunk.js","sourcesContent":["import throttle from 'lodash/throttle';\nimport buildUrl from 'build-url';\nimport moment from \"moment\";\n\nfunction formatKiwiDate(date) {\n    return moment(date).format('DD/MM/YYYY');\n}\n\nfunction addDays(date, days) {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\nconst getFaresFromAirport = throttle(\n    async function (airport, state) {\n        const dateFlexibility = state.dateFlexibility || 0;\n        const dateFrom = addDays(state.departureDate, -dateFlexibility);\n        const dateTo = addDays(state.departureDate, dateFlexibility);\n        const returnFrom = addDays(state.returnDate, -dateFlexibility);\n        const returnTo = addDays(state.returnDate, dateFlexibility);\n        const fareURL = buildUrl(\n            'https://kiwiproxy.herokuapp.com',\n            {\n                path: \"v2/search\",\n                queryParams: {\n                    fly_from: airport.id,\n                    dateFrom: formatKiwiDate(dateFrom),\n                    dateTo: formatKiwiDate(dateTo),\n                    returnFrom: formatKiwiDate(returnFrom),\n                    returnTo: formatKiwiDate(returnTo),\n                    curr: 'EUR',\n                    ret_from_diff_airport: 0,\n                    fly_to: state.destination ? state.destination.id : undefined,\n                    max_stopovers: state.max_stopovers || 0\n                }\n            }\n        ).replace(/%2F/g, '/');\n        const flights = (await (await fetch(fareURL)).json()).data;\n        return flights;\n    },\n    200\n);\n\n\nfunction arrayToDict(flights, map = {}) {\n    flights.forEach(\n        (flight) => {\n            if(getKey(flight) in map) map[getKey(flight)].push(flight);\n            else map[getKey(flight)] = [flight];\n            return map;\n        },\n        {}\n    );\n    return map;\n}\n\nfunction getKey(flight) {\n    return flight.cityCodeTo;\n}\n\nfunction maybeAdd(myFare, herFare, candidates) {\n    const maxDiffHours = 36;\n    const myArrival = new Date(myFare.route[0].local_arrival);\n    const herArrival = new Date(herFare.route[0].local_arrival);\n    const myReturn = new Date(myFare.route[myFare.route.length - 1].local_arrival);\n    const herReturn = new Date(herFare.route[herFare.route.length - 1].local_arrival);\n    const arrivalDiff = Math.abs(myArrival - herArrival);\n    const returnDiff = Math.abs(myReturn - herReturn);\n    const msTogether = Math.min(myReturn, herReturn) - Math.max(myArrival, herArrival);\n    const msApart = arrivalDiff + returnDiff;\n    if(arrivalDiff + returnDiff > maxDiffHours * 60 * 60 * 1000) return;\n    if(myFare.cityCodeTo !== herFare.cityCodeTo) return;\n    if(msTogether < 24 * 60 * 60 * 1000) return;\n    if(msTogether <= msApart) return;\n    candidates.push({\n        day: myFare.route[0].local_departure,\n        destination: myFare.cityTo + ', ' + myFare.countryTo.name,\n        myArrivalDate: myFare.route[0].local_arrival,\n        herArrivalDate: herFare.route[0].local_arrival,\n        myReturnDate: myFare.route[myFare.route.length - 1].local_arrival,\n        herReturnDate: herFare.route[herFare.route.length - 1].local_arrival,\n        myDepartureDate: myFare.route[0].local_departure,\n        herDepartureDate: herFare.route[0].local_departure,\n        price: myFare.price + herFare.price,\n        timeApart: moment.duration(msApart),\n        timeTogether: moment.duration(msTogether),\n        myLink: myFare.deep_link,\n        herLink: herFare.deep_link\n    });\n};\n\nfunction getCandidates({myFaresArray, herFaresDict, revertParams = false}) {\n    const candidates = [];\n    myFaresArray.forEach(\n        myFare => {\n            const herFaresFromCity = herFaresDict[getKey(myFare)];\n            if(herFaresFromCity) herFaresFromCity.forEach(\n                herFare => {\n                    if(revertParams) maybeAdd(herFare, myFare, candidates)\n                    else maybeAdd(myFare, herFare, candidates)\n                }\n            )\n        }\n    );\n    return candidates;\n}\n\nasync function* getFares(state) {\n    const myFares = await getFaresFromAirport(state.yourOrigin, state);\n    const herFares = await getFaresFromAirport(state.theirOrigin, state);\n    const myFaresDict = arrayToDict(myFares);\n    const herFaresDict = arrayToDict(herFares);\n    yield getCandidates({myFaresArray: myFares, herFaresDict:herFaresDict});\n    for(const destination of Object.keys(herFaresDict)) {\n        if(destination in myFaresDict) continue;\n        const myFaresToDestination = await getFaresFromAirport(\n            state.yourOrigin,\n            {...state, destination: {id: destination}}\n        );\n        const newCandidates = getCandidates({myFaresArray: myFaresToDestination, herFaresDict: herFaresDict});\n        yield newCandidates;\n        // todo: add to dict\n    }\n    for(const destination of Object.keys(myFaresDict)) {\n        if(destination in herFaresDict) continue;\n        const herFaresToDestination = await getFaresFromAirport(\n            state.theirOrigin,\n            {...state, destination: {id: destination}}\n        );\n        const newCandidates = getCandidates({myFaresArray: herFaresToDestination, herFaresDict: myFaresDict, revertParams: true});\n        yield newCandidates;\n        // todo: add to dict\n    }\n}\n\nexport default getFares;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport throttle from 'lodash/throttle';\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nasync function locationSearch({term, id}) {\n    const url = 'https://kiwiproxy.herokuapp.com/locations/' + (id ? `id?id=${id}` : `/query?&term=${term}`);\n    const locationJson = await fetch(url);\n    const locations = await locationJson.json();\n    return locations.locations.map(location => Object.assign(location, {'input': term || id}))\n}\n\nexport default function AirportSelector(props) {\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n\n    const handleSearch = (event, value) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleChange = (event, value) => {\n        props.onChange({\n            target:{\n                name: props.name,\n                value: value\n            }\n        });\n    }\n\n    const ourFetch = React.useMemo(\n        () => throttle(\n            async function(input, callback) {\n                const locations = await locationSearch({term: input});\n                callback(locations);\n            },\n            200\n        ),\n        [],\n    );\n\n    React.useEffect(\n        () => {\n            let active = true;\n            if (inputValue === '') {\n                setOptions([]);\n                return undefined;\n            }\n            ourFetch(\n                inputValue,\n                results => {\n                    if (active) {\n                        setOptions(results || []);\n                    }\n                }\n            );\n\n            return () => {\n                active = false;\n            };\n        },\n        [inputValue, ourFetch]\n    );\n\n    return (\n        <Autocomplete\n            style={{ width: \"240px\" }}\n            getOptionLabel={option => (typeof option === 'string' ? option : option.name)}\n            filterOptions={x => x}\n            options={options}\n            onChange={handleChange}\n            value={props.value}\n            renderInput={params => (\n                <TextField\n                    required={props.required}\n                    {...params}\n                    label={props.label}\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={handleSearch}\n                />\n            )}\n            renderOption={option => {\n                const parts = parse(\n                    option.name,\n                    match(option.name, option.input)\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                    {part.text}\n                                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.name}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n","import getFares from './flightsearch.js';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport AirportSelector from './AirportSelector.js';\n\n\nfunction nextThursday() {\n    return moment().add((moment().isoWeekday() >= 4  ? 12 : 4) - moment().isoWeekday(), 'days');\n}\n\nconst requiredParams = ['departureDate', 'returnDate', 'yourOrigin', 'theirOrigin'];\n\nasync function fillDefault(whichAirport, state) {\n    if(state[whichAirport]) {\n        const url = `https://kiwiproxy.herokuapp.com/locations/id?id=${state[whichAirport]}`;\n        const locationJson = await fetch(url);\n        const locations = await locationJson.json();\n        state[whichAirport] = locations.locations.filter(\n            x => x.id === state[whichAirport]\n        )[0];\n    }\n}\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureDate: nextThursday(),\n            returnDate: nextThursday().add(4, 'days'),\n            destination: \"\",\n            ...props.query\n        };\n        \n        this.state.departureDate = moment(this.state.departureDate);\n        this.state.returnDate = moment(this.state.returnDate);\n        this.allowSubmit = this.allowSubmit.bind(this);\n        this.startLoading = props.startLoading;\n        this.finishLoading = props.finishLoading;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.doStuff = this.doStuff.bind(this);\n        //this.componentDidUpdate = this.componentDidUpdate.bind(this);\n        this.setDepartureDate = this.setDepartureDate.bind(this);\n        async function fillDefaults(state, allowSubmit, doStuff) {\n            await fillDefault('yourOrigin', state);\n            await fillDefault('theirOrigin', state);\n            await fillDefault('destination', state);\n            if (allowSubmit()) doStuff();\n        }\n        fillDefaults(this.state, this.allowSubmit, this.doStuff);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const setState = this.setState.bind(this)\n        const oldMatch = prevProps.query;\n        const newMatch = this.props.query;\n        if(newMatch.returnDate !== oldMatch.returnDate) {\n            this.setState({returnDate: moment(newMatch.returnDate)});\n        }\n        if(newMatch.dateFlexibility !== oldMatch.dateFlexibility) {\n            this.setState({dateFlexibility: newMatch.dateFlexibility});\n        }\n        \n        if(newMatch.max_stopovers !== oldMatch.max_stopovers) {\n            this.setState({max_stopovers: newMatch.max_stopovers});\n        }\n        if(newMatch.departureDate !== oldMatch.departureDate) this.setDepartureDate(newMatch.departureDate);\n        async function setAirport(which)  {\n            if(newMatch[which] !== oldMatch[which]) {\n                const newState = {};\n                newState[which] = newMatch[which];\n                await fillDefault(which, newState);\n                setState(newState);\n            }\n        }\n        setAirport('yourOrigin');\n        setAirport('theirOrigin');\n        setAirport('destination');\n    }\n    \n    handleChange = function(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    allowSubmit() {\n        return requiredParams.reduce(\n            (tot, par) => tot && !!this.state[par],\n            true\n        ) && !this.props.loading;\n    }\n\n    setDepartureDate(newDate) {\n        if(newDate > this.state.returnDate) {\n            this.setState({\n                returnDate: moment(this.state.returnDate + (newDate - this.state.departureDate))\n            });\n        }\n        this.setState({departureDate: moment(newDate)});\n    }\n\n    async doStuff() {\n        this.startLoading();\n        this.props.clearCandidates();\n        this.props.setQuery({\n            yourOrigin: this.state.yourOrigin.id,\n            theirOrigin: this.state.theirOrigin.id,\n            destination: this.state.destination ? this.state.destination.id : undefined,\n            departureDate: this.state.departureDate.toDate(),\n            returnDate: this.state.returnDate.toDate()\n        });\n        for await (const fares of await getFares(this.state)) this.props.addCandidates(fares);\n        this.finishLoading();\n    }\n\n    renderInput = input => input.name;\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <Grid container spacing={2}>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"departureDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                disablePast\n                                variant=\"inline\"\n                                label=\"Departure\"\n                                value={this.state.departureDate}\n                                inputVariant=\"outlined\"\n                                onChange={this.setDepartureDate}\n                            />\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"returnDate\" utils={MomentUtils}>\n                            <DatePicker\n                                required\n                                variant=\"inline\"\n                                label=\"Return\"\n                                value={this.state.returnDate}\n                                inputVariant=\"outlined\"\n                                onChange={d => this.setState({returnDate: d})}\n                                minDate={this.state.departureDate}\n                            />\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"yourOrigin\"\n                            name=\"yourOrigin\"\n                            value={this.state.yourOrigin}\n                            onChange={this.handleChange}\n                            label=\"Your origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"theirOrigin\"\n                            name=\"theirOrigin\"\n                            value={this.state.theirOrigin}\n                            onChange={this.handleChange}\n                            label=\"Their origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            id=\"destination\"\n                            name=\"destination\"\n                            value={this.state.destination}\n                            onChange={this.handleChange}\n                            label=\"Destination\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <Button variant=\"contained\" color=\"primary\" disabled={!this.allowSubmit()} onClick={this.doStuff}>Search</Button>\n                    </Grid>\n                </Grid>\n                \n            </form>\n        );\n    }\n}\n\nexport default Form\n","import moment from \"moment\";\nimport React from 'react';\nimport 'react-tabulator/lib/styles.css';\nimport 'react-tabulator/lib/css/tabulator.min.css';\nimport { ReactTabulator } from 'react-tabulator';\n\nexport default function ResultsTable(props) {\n    const columns = [\n        {\n            title: \"Price\",\n            field: \"price\",\n            formatter: \"money\",\n            formatterParams: {\n                symbol: \"€\",\n                precision: 0\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => headerValue >= rowValue,\n        },\n        {\n            title: \"Destination\",\n            field: \"destination\",\n            headerFilter: true\n        },\n        {\n            title: \"You\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"myArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"myReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"myLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Them\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"herArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"herReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"herLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Together\",\n            field: \"timeTogether\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            sorter: (a, b) => a.asSeconds() - b.asSeconds(),\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) <= rowValue,\n        },\n        {\n            title: \"Apart\",\n            field: \"timeApart\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            sorter: (a, b) => a.asSeconds() - b.asSeconds(),\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) >= rowValue,\n        },\n    ];\n    return (\n        <ReactTabulator\n            data={props.candidates}\n            columns={columns}\n            options={{\n                height:\"100%\",\n                layout:\"fitColumns\",\n                reactiveData:true,\n            }}\n        />\n  );\n}\n\nfunction parseDuration(s) {\n    const parts = s.split(' ');\n    const numberPart = parts[0] === 'a' || parts[0] === 'an' ? 1 : parseInt(parts[0]);\n    const unitPart =  parts[1][parts[1].length -1] === 's' ? parts[1] : parts[1] + 's';\n    return moment.duration(numberPart, unitPart);\n}\n","import moment from \"moment\";\nimport React from 'react';\nimport './App.css';\nimport Form from './Form.js';\nimport ResultsTable from './ResultsTable.js';\nimport {\n  useQueryParams,\n  StringParam,\n  DateParam,\n  NumberParam,\n} from 'use-query-params';\n\n// for tabulator\nwindow.moment = moment;\nmoment.updateLocale('en', {\n    week: {\n      dow: 1,\n    },\n});\n\nfunction App(props) {\n    const [query, setQuery] = useQueryParams({\n        destination: StringParam,\n        theirOrigin: StringParam,\n        yourOrigin: StringParam,\n        departureDate: DateParam,\n        returnDate: DateParam,\n        dateFlexibility: NumberParam,\n        max_stopovers: NumberParam,\n    });\n    const [loading, setLoading] = React.useState(0);\n    const [candidates, setCandidates] = React.useState([]);\n    const startLoading = () => setLoading(loading + 1);\n    const finishLoading = () => setLoading(loading - 1);\n    const addCandidates = (newCandidates) => setCandidates([...candidates, ...newCandidates]);\n    const clearCandidates = () => setCandidates([]);\n    return (\n        <div>\n            <Form\n                addCandidates={addCandidates}\n                clearCandidates={clearCandidates}\n                startLoading={startLoading}\n                finishLoading={finishLoading}\n                loading={loading > 0}\n                query={query}\n                setQuery={setQuery}\n            />\n            <Loading id=\"loading\" loading={loading > 0}/>\n            <ResultsTable candidates={candidates}/>\n        </div>\n  );\n}\n\nfunction Loading(props) {\n    return <div id={props.id}>{props.loading ? '✈' : ''}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Route, HashRouter as Router } from 'react-router-dom'\nimport { QueryParamProvider } from 'use-query-params';\nimport App from './App'\n\nconst routing = (\n<Router>\n    <QueryParamProvider ReactRouterRoute={Route}>\n        <App />\n    </QueryParamProvider>\n</Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n"],"sourceRoot":""}