{"version":3,"sources":["AirportSelector.js","Form.js","ResultsTable.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","locationSearch","a","async","term","id","url","fetch","locationJson","json","locations","map","location","Object","assign","AirportSelector","props","classes","React","useState","inputValue","setInputValue","options","setOptions","handleSearch","event","value","target","ourFetch","useMemo","throttle","input","callback","useEffect","active","results","Autocomplete","style","width","getOptionLabel","option","name","filterOptions","x","onChange","renderInput","params","TextField","required","label","variant","fullWidth","renderOption","parts","parse","match","Grid","container","alignItems","item","className","xs","part","index","key","fontWeight","highlight","Typography","nextThursday","moment","add","isoWeekday","requiredParams","Form","state","allowSubmit","doStuff","fillDefault","whichAirport","filter","code","handleChange","e","this","setState","departureDate","returnDate","destinationAirport","bind","startLoading","finishLoading","handleSubmit","preventDefault","reduce","tot","par","loading","clearCandidates","history","push","myAirport","herAirport","format","getFares","newCandidates","addCandidates","onSubmit","sm","md","xl","utils","MomentUtils","DatePicker","inputVariant","d","Button","disabled","onClick","Component","formatKiwiDate","date","getFaresFromAirport","airport","fareURL","buildUrl","path","queryParams","fly_from","dateFrom","dateTo","returnFrom","returnTo","curr","ret_from_diff_airport","fly_to","undefined","max_stopovers","replace","data","candidates","maybeAdd","myFare","herFare","myArrival","Date","route","local_arrival","herArrival","myReturn","length","herReturn","arrivalDiff","Math","abs","returnDiff","msTogether","min","max","msApart","maxDiffHours","cityCodeTo","day","local_departure","destination","cityTo","countryTo","myArrivalDate","herArrivalDate","myReturnDate","herReturnDate","myDepartureDate","herDepartureDate","price","timeApart","duration","timeTogether","myLink","deep_link","herLink","myFares","herFares","forEach","withRouter","ResultsTable","columns","title","field","formatter","formatterParams","symbol","precision","headerFilter","headerFilterFunc","headerValue","rowValue","align","outputFormat","cell","onRendered","getValue","humanize","sorter","b","asSeconds","parseDuration","height","layout","reactiveData","s","split","numberPart","parseInt","unitPart","window","updateLocale","week","dow","Loading","App","setLoading","setCandidates","routing","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ceacf37.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport throttle from 'lodash/throttle';\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nasync function locationSearch({term, id}) {\n    const url = 'https://kiwiproxy.herokuapp.com/locations/' + (id ? `id?id=${id}` : `/query?&term=${term}`);\n    const locationJson = await fetch(url);\n    const locations = await locationJson.json();\n    return locations.locations.map(location => Object.assign(location, {'input': term || id}))\n}\n\nexport default function AirportSelector(props) {\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n\n    const handleSearch = (event, value) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleChange = (event, value) => {\n        props.onChange({\n            target:{\n                name: props.name,\n                value: value\n            }\n        });\n    }\n\n    const ourFetch = React.useMemo(\n        () => throttle(\n            async function(input, callback) {\n                const locations = await locationSearch({term: input});\n                callback(locations);\n            },\n            200\n        ),\n        [],\n    );\n\n    React.useEffect(\n        () => {\n            let active = true;\n            if (inputValue === '') {\n                setOptions([]);\n                return undefined;\n            }\n            ourFetch(\n                inputValue,\n                results => {\n                    if (active) {\n                        setOptions(results || []);\n                    }\n                }\n            );\n\n            return () => {\n                active = false;\n            };\n        },\n        [inputValue]\n    );\n\n    return (\n        <Autocomplete\n            style={{ width: \"240px\" }}\n            getOptionLabel={option => (typeof option === 'string' ? option : option.name)}\n            filterOptions={x => x}\n            options={options}\n            onChange={handleChange}\n            value={props.value}\n            renderInput={params => (\n                <TextField\n                    required={props.required}\n                    {...params}\n                    label={props.label}\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={handleSearch}\n                />\n            )}\n            renderOption={option => {\n                const parts = parse(\n                    option.name,\n                    match(option.name, option.input)\n                );\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item>\n                            <LocationOnIcon className={classes.icon} />\n                        </Grid>\n                        <Grid item xs>\n                            {parts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                    {part.text}\n                                </span>\n                            ))}\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.name}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n","import { withRouter } from 'react-router-dom';\nimport buildUrl from 'build-url';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport AirportSelector from './AirportSelector.js';\n\nfunction nextThursday() {\n    return moment().add((moment().isoWeekday() >= 4  ? 12 : 4) - moment().isoWeekday(), 'days');\n}\n\nconst requiredParams = ['departureDate', 'returnDate', 'myAirport', 'herAirport'];\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureDate: nextThursday(),\n            returnDate: nextThursday().add(4, 'days'),\n            destinationAirport: \"\",\n            ...props.match.params\n        };\n        this.state.departureDate = moment(this.state.departureDate);\n        this.state.returnDate = moment(this.state.returnDate);\n        this.allowSubmit = this.allowSubmit.bind(this);\n        this.startLoading = props.startLoading;\n        this.finishLoading = props.finishLoading;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.doStuff = this.doStuff.bind(this);\n        async function fillDefault(whichAirport, state) {\n            if(state[whichAirport]) {\n                const url = `https://kiwiproxy.herokuapp.com/locations/id?id=${state[whichAirport]}`;\n                const locationJson = await fetch(url);\n                const locations = await locationJson.json();\n                state[whichAirport] = locations.locations.filter(\n                    x => x.code === state[whichAirport]\n                )[0];\n            }\n        }\n        async function fillDefaults(state, allowSubmit, doStuff) {\n            await fillDefault('myAirport', state);\n            await fillDefault('herAirport', state);\n            if (allowSubmit()) doStuff();\n        }\n        fillDefaults(this.state, this.allowSubmit, this.doStuff);\n    }\n\n    handleChange = function(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    allowSubmit() {\n        return requiredParams.reduce(\n            (tot, par) => tot && !!this.state[par],\n            true\n        ) && !this.props.loading;\n    }\n\n    async doStuff() {\n        this.startLoading();\n        this.props.clearCandidates();\n        this.props.history.push(\n            `/${this.state.myAirport.id}/` +\n            `${this.state.herAirport.id}/` +\n            `${this.state.departureDate.format('YYYY-MM-DD')}/` +\n            `${this.state.returnDate.format('YYYY-MM-DD')}/` +\n            (this.state.destinationAirport && this.state.destinationAirport.id ? `${this.state.destinationAirport.id}` : '')\n        );\n        const newCandidates = await getFares(this.state);\n        this.props.addCandidates(newCandidates);\n        this.finishLoading();\n    }\n\n    renderInput = input => input.name;\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <Grid container spacing={2}>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"departureDate\" utils={MomentUtils}>\n                            <DatePicker required variant=\"inline\" label=\"Departure\" value={this.state.departureDate} inputVariant=\"outlined\" onChange={d => this.setState({departureDate: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <MuiPickersUtilsProvider name=\"returnDate\" utils={MomentUtils}>\n                            <DatePicker required variant=\"inline\" label=\"Return\" value={this.state.returnDate} inputVariant=\"outlined\" onChange={d => this.setState({returnDate: d})}/>\n                            </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"myAirport\"\n                            name=\"myAirport\"\n                            value={this.state.myAirport}\n                            onChange={this.handleChange}\n                            label=\"Your origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            required\n                            id=\"herAirport\"\n                            name=\"herAirport\"\n                            value={this.state.herAirport}\n                            onChange={this.handleChange}\n                            label=\"Their origin\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <AirportSelector\n                            startLoading={this.startLoading}\n                            finishLoading={this.finishLoading}\n                            id=\"destinationAirport\"\n                            name=\"destinationAirport\"\n                            value={this.state.destinationAirport}\n                            onChange={this.handleChange}\n                            label=\"Destination\"\n                            renderInput={this.renderInput}\n                        />\n                    </Grid>\n                    <Grid item sm={6} md={3} xl={2}>\n                        <Button variant=\"contained\" color=\"primary\" disabled={!this.allowSubmit()} onClick={this.doStuff}>Search</Button>\n                    </Grid>\n                </Grid>\n                \n            </form>\n        );\n    }\n}\n\nfunction formatKiwiDate(date) {\n    return moment(date).format('DD/MM/YYYY');\n}\n\nasync function getFaresFromAirport(airport, state) {\n    const fareURL = buildUrl(\n        'https://kiwiproxy.herokuapp.com',\n        {\n            path: \"v2/search\",\n            queryParams: {\n                fly_from: airport.id,\n                dateFrom: formatKiwiDate(state.departureDate),\n                dateTo: formatKiwiDate(state.departureDate),\n                returnFrom: formatKiwiDate(state.returnDate),\n                returnTo: formatKiwiDate(state.returnDate),\n                curr: 'EUR',\n                ret_from_diff_airport: 0,\n                fly_to: state.destinationAirport ? state.destinationAirport.id : undefined,\n                max_stopovers: 0\n            }\n        }\n    ).replace(/%2F/g, '/');\n    return (await (await fetch(fareURL)).json()).data;\n}\n\nasync function getFares(state) {\n    const candidates = [];\n    var maybeAdd = function(myFare, herFare) {\n        const maxDiffHours = 36;\n        const myArrival = new Date(myFare.route[0].local_arrival);\n        const herArrival = new Date(herFare.route[0].local_arrival);\n        const myReturn = new Date(myFare.route[myFare.route.length - 1].local_arrival);\n        const herReturn = new Date(herFare.route[herFare.route.length - 1].local_arrival);\n        const arrivalDiff = Math.abs(myArrival - herArrival);\n        const returnDiff = Math.abs(myReturn - herReturn);\n        const msTogether = Math.min(myReturn, herReturn) - Math.max(myArrival, herArrival);\n        const msApart = arrivalDiff + returnDiff;\n        if(arrivalDiff + returnDiff > maxDiffHours * 60 * 60 * 1000) return;\n        if(myFare.cityCodeTo !== herFare.cityCodeTo) return;\n        if(msTogether < 24 * 60 * 60 * 1000) return;\n        if(msTogether <= msApart) return;\n        candidates.push({\n            day: myFare.route[0].local_departure,\n            destination: myFare.cityTo + ', ' + myFare.countryTo.name,\n            myArrivalDate: myFare.route[0].local_arrival,\n            herArrivalDate: herFare.route[0].local_arrival,\n            myReturnDate: myFare.route[myFare.route.length - 1].local_arrival,\n            herReturnDate: herFare.route[herFare.route.length - 1].local_arrival,\n            myDepartureDate: myFare.route[0].local_departure,\n            herDepartureDate: herFare.route[0].local_departure,\n            price: myFare.price + herFare.price,\n            timeApart: moment.duration(msApart),\n            timeTogether: moment.duration(msTogether),\n            myLink: myFare.deep_link,\n            herLink: herFare.deep_link\n        });\n    };\n    const myFares = await getFaresFromAirport(state.myAirport, state);\n    const herFares = await getFaresFromAirport(state.herAirport, state);\n    myFares.forEach(\n        function(myFare) {\n            herFares.forEach(\n                function(herFare){\n                    maybeAdd(myFare, herFare);\n                }\n            );\n        }\n    );\n    return candidates;\n}\n\nexport default withRouter(Form)\n","import moment from \"moment\";\nimport React from 'react';\nimport 'react-tabulator/lib/styles.css';\nimport 'react-tabulator/lib/css/tabulator.min.css';\nimport { ReactTabulator } from 'react-tabulator';\n\nexport default function ResultsTable(props) {\n    const columns = [\n        {\n            title: \"Price\",\n            field: \"price\",\n            formatter: \"money\",\n            formatterParams: {\n                symbol: \"€\",\n                precision: 0\n            },\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => headerValue >= rowValue,\n        },\n        {\n            title: \"Destination\",\n            field: \"destination\",\n            headerFilter: true\n        },\n        {\n            title: \"You\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"myArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"myReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"myLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Them\",\n            columns: [\n                {\n                    title: \"Arrival\",\n                    field: \"herArrivalDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Return\",\n                    field: \"herReturnDate\",\n                    align: \"center\",\n                    formatter:\"datetime\",\n                    formatterParams: {\n                        outputFormat:\"ddd DD MMM HH:mm\"\n                    },\n                },\n                {\n                    title: \"Link\",\n                    field: \"herLink\",\n                    formatter:\"link\",\n                    formatterParams: {\n                        label: \"Buy\",\n                        target: \"_blank\",\n                    }\n                },\n            ]\n        },\n        {\n            title: \"Together\",\n            field: \"timeTogether\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            sorter: (a, b) => a.asSeconds() - b.asSeconds(),\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) <= rowValue,\n        },\n        {\n            title: \"Apart\",\n            field: \"timeApart\",\n            formatter: function(cell, formatterParams, onRendered){\n                return cell.getValue().humanize();\n            },\n            sorter: (a, b) => a.asSeconds() - b.asSeconds(),\n            headerFilter: true,\n            headerFilterFunc: (headerValue, rowValue) => parseDuration(headerValue) >= rowValue,\n        },\n    ];\n    return (\n        <ReactTabulator\n            data={props.candidates}\n            columns={columns}\n            options={{\n                height:\"100%\",\n                layout:\"fitColumns\",\n                reactiveData:true,\n            }}\n        />\n  );\n}\n\nfunction parseDuration(s) {\n    const parts = s.split(' ');\n    const numberPart = parts[0] === 'a' || parts[0] === 'an' ? 1 : parseInt(parts[0]);\n    const unitPart =  parts[1][parts[1].length -1] === 's' ? parts[1] : parts[1] + 's';\n    return moment.duration(numberPart, unitPart);\n}\n","import moment from \"moment\";\nimport React from 'react';\nimport './App.css';\nimport Form from './Form.js';\nimport ResultsTable from './ResultsTable.js';\n\n// for tabulator\nwindow.moment = moment;\nmoment.updateLocale('en', {\n  week: {\n    dow: 1,\n  },\n})\n\nconst candidates = [];\n\nfunction App(props) {\n    const [loading, setLoading] = React.useState(0);\n    const [candidates, setCandidates] = React.useState([]);\n    const startLoading = () => setLoading(loading + 1);\n    const finishLoading = () => setLoading(loading - 1);\n    const addCandidates = (newCandidates) => setCandidates([...candidates, ...newCandidates]);\n    const clearCandidates = () => setCandidates([]);\n    return (\n        <div>\n            <Form\n                addCandidates={addCandidates}\n                clearCandidates={clearCandidates}\n                startLoading={startLoading}\n                finishLoading={finishLoading}\n                loading={loading > 0}\n            />\n            <Loading id=\"loading\" loading={loading > 0}/>\n            <ResultsTable candidates={candidates}/>\n        </div>\n  );\n}\n\nfunction Loading(props) {\n    return <div id={props.id}>{props.loading ? '✈' : ''}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom'\nimport App from './App'\n\nconst routing = (\n  <Router>\n    <div>\n        <Switch>\n            <Route exact path=\"/:myAirport/:herAirport/:departureDate/:returnDate\" component={App} />\n            <Route exact path=\"/:myAirport/:herAirport/:departureDate/:returnDate/:destinationAirport\" component={App} />\n            <Route exact path=\"/\" component={App} />\n        </Switch>\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n"],"sourceRoot":""}